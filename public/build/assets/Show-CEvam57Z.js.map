{"version":3,"file":"Show-CEvam57Z.js","sources":["../../../resources/js/pages/StocksCentral/Show.tsx"],"sourcesContent":["import AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { App, PageProps } from '@/types/types';\nimport { Head, Link } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { Box, PackageCheck, PackageX } from 'lucide-react';\n\nexport default function Show({ stock, produits, hopitals }: PageProps<{ \n    stock: App.Stock,\n    produits: App.MedicalProduit[],\n    hopitals: App.Hopital[]\n}>) {\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Gestion des Stocks',\n            href: '/stocks',\n        },\n        {\n            title: `Entrée ${stock.id}`,\n            href: `/stocks/${stock.ref}`,\n        },\n    ];\n\n    const getProduitName = (id: number) => {\n        return produits.find(p => p.id === id)?.name || 'Inconnu';\n    };\n\n    const getHopitalName = (id: number | null) => {\n        if (!id) return 'Stock central';\n        return hopitals.find(h => h.id === id)?.nom || 'Inconnu';\n    };\n\n    const getStatusBadge = (status: string) => {\n        switch (status) {\n            case 'disponible':\n                return <Badge variant=\"default\"><PackageCheck className=\"mr-1 h-3 w-3\" /> Disponible</Badge>;\n            case 'reservee':\n                return <Badge variant=\"secondary\"><Box className=\"mr-1 h-3 w-3\" /> Réservée</Badge>;\n            case 'expirer':\n                return <Badge variant=\"destructive\"><PackageX className=\"mr-1 h-3 w-3\" /> Expiré</Badge>;\n            case 'endommage':\n                return <Badge variant=\"destructive\">Endommagé</Badge>;\n            default:\n                return <Badge variant=\"outline\">Inconnu</Badge>;\n        }\n    };\n\n    const formatDate = (dateString: string | null) => {\n        if (!dateString) return 'Non spécifiée';\n        return format(new Date(dateString), 'PPP', { locale: fr });\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title={`Détails de l'entrée de stock`} />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <div className=\"p-6\">\n                            <div className=\"flex justify-between items-center mb-6\">\n                                <h1 className=\"text-2xl font-bold\">Entrée de stock #{stock.id}</h1>\n                                <div className=\"flex space-x-2\">\n                                    <Button variant=\"outline\" asChild>\n                                        <Link href={route('stocks.index')}>Retour</Link>\n                                    </Button>\n                                    <Button asChild>\n                                        <Link href={route('stocks.edit', stock.ref)}>Modifier</Link>\n                                    </Button>\n                                    <Button asChild>\n                                        <Link href={route('stock.entree.show', stock.ref)}>Voir plus</Link>\n                                    </Button>\n                                </div>\n                            </div>\n\n                            <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                <Card>\n                                    <CardHeader>\n                                        <CardTitle>Informations de base</CardTitle>\n                                    </CardHeader>\n                                    <CardContent className=\"space-y-4\">\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Produit</p>\n                                            <p>{getProduitName(stock.medical_produit_id)}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Quantité</p>\n                                            <p>{stock.quantite}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Numéro de lot</p>\n                                            <p>{stock.numero_lot || 'Non spécifié'}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Statut</p>\n                                            {getStatusBadge(stock.status)}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n\n                                <Card>\n                                    <CardHeader>\n                                        <CardTitle>Détails supplémentaires</CardTitle>\n                                    </CardHeader>\n                                    <CardContent className=\"space-y-4\">\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Prix unitaire</p>\n                                            <p>{stock.prix_unitaire ? `${parseFloat(stock.prix_unitaire).toFixed(2)}  FC` : 'Non spécifié'} </p>\n\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Date de réception</p>\n                                            <p>{formatDate(stock.received_date)}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Date d'expiration</p>\n                                            <p>{formatDate(stock.date_expiration)}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Emplacement</p>\n                                            <p>{getHopitalName(stock.hopital_id)}</p>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </div>\n\n                            <Card className=\"mt-6\">\n                                <CardHeader>\n                                    <CardTitle>Historique</CardTitle>\n                                </CardHeader>\n                                <CardContent>\n                                    <div className=\"space-y-4\">\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Créé le</p>\n                                            <p>{formatDate(stock.created_at)} par {stock.created_by?.name || 'Système'}</p>\n                                        </div>\n                                        <div>\n                                            <p className=\"text-sm text-gray-500\">Dernière modification</p>\n                                            <p>{formatDate(stock.updated_at)} par {stock.updated_by?.name || 'Système'}</p>\n                                        </div>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["Show","stock","produits","hopitals","breadcrumbs","getProduitName","id","_a","p","getHopitalName","h","getStatusBadge","status","jsxs","Badge","jsx","PackageCheck","Box","PackageX","formatDate","dateString","format","fr","AppLayout","Head","Button","Link","Card","CardHeader","CardTitle","CardContent","_b"],"mappings":"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"}