{"version":3,"file":"Form-Da52ZEf9.js","sources":["../../../resources/js/pages/Fournisseurs/Form.tsx"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Textarea } from '@/components/ui/textarea';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { PageProps } from '@/types/types';\nimport { Head, Link, router, useForm } from '@inertiajs/react';\nimport { BadgeCheckIcon, CalendarIcon } from 'lucide-react';\nimport { useState } from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface FournisseurFormProps {\n    fournisseur?: {\n        id?: number;\n        ref?: string;\n        nom: string;\n        contact_person: string;\n        phone: string;\n        email: string;\n        address: string;\n        specialties: string[];\n        is_active: boolean;\n        contract_start_date: string;\n        contract_end_date: string;\n    };\n}\n\nconst specialtiesOptions = [\n    { value: 'medicaments', label: 'Médicaments' },\n    { value: 'equipements', label: 'Équipements médicaux' },\n    { value: 'consommables', label: 'Consommables médicaux' },\n    { value: 'mobilier', label: 'Mobilier médical' },\n    { value: 'services', label: 'Services médicaux' },\n    { value: 'logiciels', label: 'Logiciels médicaux' },\n];\n\nexport default function Form({ fournisseur }: PageProps<FournisseurFormProps>) {\n    const { data, setData, errors, post, put, processing } = useForm({\n        nom: fournisseur?.nom || '',\n        contact_person: fournisseur?.contact_person || '',\n        phone: fournisseur?.phone || '',\n        email: fournisseur?.email || '',\n        address: fournisseur?.address || '',\n        specialties: fournisseur?.specialties || [],\n        is_active: fournisseur?.is_active ?? true,\n        contract_start_date: fournisseur?.contract_start_date || null,\n        contract_end_date: fournisseur?.contract_end_date || null,\n    });\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Fournisseurs',\n            href: '/fournisseurs',\n        },\n        {\n            href: fournisseur ? `/fournisseurs/${fournisseur.ref}` : '',\n            title: fournisseur ? 'Modifier Fournisseur' : 'Créer Fournisseur',\n        },\n    ];\n\n    const submit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (fournisseur) {\n            put(route('fournisseurs.update', fournisseur.ref));\n        } else {\n            post(route('fournisseurs.store'));\n        }\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title={fournisseur ? 'Modifier Fournisseur' : 'Créer Fournisseur'} />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle className=\"text-xl font-semibold\">{fournisseur ? 'Modifier Fournisseur' : 'Créer Fournisseur'}</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                            <div className=\"p-6\">\n                            <form onSubmit={submit} className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"nom\">Nom *</Label>\n                                        <Input\n                                            id=\"nom\"\n                                            value={data.nom}\n                                            onChange={(e) => setData('nom', e.target.value)}\n                                            placeholder=\"Nom du fournisseur\"\n                                        />\n                                        {errors.nom && <p className=\"text-sm text-red-500\">{errors.nom}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"contact_person\">Personne de contact</Label>\n                                        <Input\n                                            id=\"contact_person\"\n                                            value={data.contact_person}\n                                            onChange={(e) => setData('contact_person', e.target.value)}\n                                            placeholder=\"Nom du contact\"\n                                        />\n                                        {errors.contact_person && (\n                                            <p className=\"text-sm text-red-500\">{errors.contact_person}</p>\n                                        )}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"phone\">Téléphone</Label>\n                                        <Input\n                                            id=\"phone\"\n                                            value={data.phone}\n                                            onChange={(e) => setData('phone', e.target.value)}\n                                            placeholder=\"Numéro de téléphone\"\n                                        />\n                                        {errors.phone && <p className=\"text-sm text-red-500\">{errors.phone}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"email\">Email</Label>\n                                        <Input\n                                            id=\"email\"\n                                            type=\"email\"\n                                            value={data.email}\n                                            onChange={(e) => setData('email', e.target.value)}\n                                            placeholder=\"Email\"\n                                        />\n                                        {errors.email && <p className=\"text-sm text-red-500\">{errors.email}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2 md:col-span-2\">\n                                        <Label htmlFor=\"address\">Adresse</Label>\n                                        <Textarea\n                                            id=\"address\"\n                                            value={data.address}\n                                            onChange={(e) => setData('address', e.target.value)}\n                                            placeholder=\"Adresse complète\"\n                                        />\n                                        {errors.address && <p className=\"text-sm text-red-500\">{errors.address}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2 md:col-span-2\">\n                                        <Label htmlFor=\"specialties\">Spécialités</Label>\n                                        <Select\n                                            value=\"\"\n                                            onValueChange={(value) => {\n                                                if (value && !data.specialties.includes(value)) {\n                                                    setData('specialties', [...data.specialties, value]);\n                                                }\n                                            }}\n                                        >\n                                            <SelectTrigger className=\"w-full\">\n                                                <SelectValue placeholder=\"Ajouter une spécialité\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {specialtiesOptions.map((option) => (\n                                                    <SelectItem \n                                                        key={option.value} \n                                                        value={option.value}\n                                                        disabled={data.specialties.includes(option.value)}\n                                                    >\n                                                        {option.label}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n\n                                        {data.specialties.length > 0 && (\n                                            <div className=\"flex flex-wrap gap-2 mt-2\">\n                                                {data.specialties.map((specialty) => {\n                                                    const option = specialtiesOptions.find(opt => opt.value === specialty);\n                                                    return (\n                                                        <Badge key={specialty} variant=\"secondary\" className=\"px-3 py-1\">\n                                                            {option?.label || specialty}\n                                                            <button\n                                                                type=\"button\"\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    setData('specialties', data.specialties.filter(s => s !== specialty));\n                                                                }}\n                                                                className=\"ml-2 text-xs\"\n                                                            >\n                                                                ×\n                                                            </button>\n                                                        </Badge>\n                                                    );\n                                                })}\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label>Date de début de contrat</Label>\n                                        <Popover>\n                                            <PopoverTrigger asChild>\n                                                <Button\n                                                    variant=\"outline\"\n                                                    className=\"w-full justify-start text-left font-normal\"\n                                                >\n                                                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                    {data.contract_start_date\n                                                        ? new Date(data.contract_start_date).toLocaleDateString()\n                                                        : 'Sélectionner une date'}\n                                                </Button>\n                                            </PopoverTrigger>\n                                            <PopoverContent className=\"w-auto p-0\">\n                                                <Calendar\n                                                    mode=\"single\"\n                                                    selected={data.contract_start_date ? new Date(data.contract_start_date) : undefined}\n                                                    onSelect={(date) =>\n                                                        setData('contract_start_date', date?.toISOString() || null)\n                                                    }\n                                                    initialFocus\n                                                />\n                                            </PopoverContent>\n                                        </Popover>\n                                        {errors.contract_start_date && (\n                                            <p className=\"text-sm text-red-500\">{errors.contract_start_date}</p>\n                                        )}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label>Date de fin de contrat</Label>\n                                        <Popover>\n                                            <PopoverTrigger asChild>\n                                                <Button\n                                                    variant=\"outline\"\n                                                    className=\"w-full justify-start text-left font-normal\"\n                                                >\n                                                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                    {data.contract_end_date\n                                                        ? new Date(data.contract_end_date).toLocaleDateString()\n                                                        : 'Sélectionner une date'}\n                                                </Button>\n                                            </PopoverTrigger>\n                                            <PopoverContent className=\"w-auto p-0\">\n                                                <Calendar\n                                                    mode=\"single\"\n                                                    selected={data.contract_end_date ? new Date(data.contract_end_date) : undefined}\n                                                    onSelect={(date) =>\n                                                        setData('contract_end_date', date?.toISOString() || null)\n                                                    }\n                                                    initialFocus\n                                                />\n                                            </PopoverContent>\n                                        </Popover>\n                                        {errors.contract_end_date && (\n                                            <p className=\"text-sm text-red-500\">{errors.contract_end_date}</p>\n                                        )}\n                                    </div>\n\n                                    <div className=\"flex items-center space-x-2\">\n                                        <Checkbox\n                                            id=\"is_active\"\n                                            checked={data.is_active}\n                                            onCheckedChange={(checked) => setData('is_active', Boolean(checked))}\n                                        />\n                                        <Label htmlFor=\"is_active\">Actif</Label>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex justify-end space-x-4\">\n                                    <Button asChild variant=\"outline\">\n                                        <Link href={route('fournisseurs.index')}>Annuler</Link>\n                                    </Button>\n                                    <Button type=\"submit\" disabled={processing}>\n                                        {fournisseur ? 'Mettre à jour' : 'Créer'}\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                            </CardContent>\n                        </Card>\n                        \n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["specialtiesOptions","Form","fournisseur","data","setData","errors","post","put","processing","useForm","breadcrumbs","submit","e","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Input","Textarea","Select","value","SelectTrigger","SelectValue","SelectContent","option","SelectItem","specialty","opt","Badge","s","Popover","PopoverTrigger","Button","CalendarIcon","PopoverContent","Calendar","date","Checkbox","checked","Link"],"mappings":"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"}