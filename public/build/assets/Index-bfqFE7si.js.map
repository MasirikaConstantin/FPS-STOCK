{"version":3,"file":"Index-bfqFE7si.js","sources":["../../../resources/js/pages/Alerts/Index.tsx"],"sourcesContent":["import { Head, Link, router } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { AlertTriangle, Bell, Check, CircleAlert, Clock,  Info } from 'lucide-react';\n\nconst typeIcons = {\n  stock_faible: <AlertTriangle className=\"h-4 w-4\" />,\n  avertissement_expiration: <Clock className=\"h-4 w-4\" />,\n  expire: <CircleAlert className=\"h-4 w-4\" />,\n  demande_transfert: <Bell className=\"h-4 w-4\" />,\n  systeme: <Info className=\"h-4 w-4\" />,\n};\n\nconst typeColors = {\n  stock_faible: 'bg-amber-100 text-amber-800',\n  avertissement_expiration: 'bg-blue-100 text-blue-800',\n  expire: 'bg-red-100 text-red-800',\n  demande_transfert: 'bg-purple-100 text-purple-800',\n  systeme: 'bg-gray-100 text-gray-800',\n};\n\nconst priorityColors = {\n  faible: 'bg-gray-100 text-gray-800',\n  moyen: 'bg-blue-100 text-blue-800',\n  eleve: 'bg-amber-100 text-amber-800',\n  critique: 'bg-red-100 text-red-800',\n};\n\nconst breadcrumbs: BreadcrumbItem[] = [\n  {\n    title: 'Gestion des Alertes',\n    href: '/alerts',\n  },\n];\n\nexport default function Index({ alerts, filters, types, priorities }: any) {\n  const handleFilter = (field: string, value: string | boolean) => {\n    router.get('/alerts', { ...filters, [field]: value }, { preserveState: true });\n  };\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title=\"Gestion des Alertes\" />\n\n      <div className=\"py-12\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8 space-y-6\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n              <CardTitle className=\"text-2xl font-bold\">Liste des Alertes</CardTitle>\n              <Button asChild>\n                <Link href={route('alerts.create')}>Créer une Alerte</Link>\n              </Button>\n            </CardHeader>\n\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <Input\n                  placeholder=\"Rechercher...\"\n                  value={filters.search || ''}\n                  onChange={(e) => handleFilter('search', e.target.value)}\n                />\n                <Select\n                    value={filters.type || undefined}  // Use undefined instead of empty string\n                    onValueChange={(value) => handleFilter('type', value)}\n                    >\n                    <SelectTrigger>\n                        <SelectValue placeholder=\"Type d'alerte\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectItem value=\"all\">Tous les types</SelectItem>  {/* Changed from \"\" to \"all\" */}\n                        {Object.entries(types).map(([value, label]) => (\n                        <SelectItem key={value} value={value}>\n                            {label}\n                        </SelectItem>\n                        ))}\n                    </SelectContent>\n                    </Select>\n                    <Select\n                        value={filters.priorite || undefined}\n                        onValueChange={(value) => handleFilter('priorite', value)}\n                        >\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Priorité\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            <SelectItem value=\"all\">Toutes les priorités</SelectItem>  {/* Changed from \"\" to \"all\" */}\n                            {Object.entries(priorities).map(([value, label]) => (\n                            <SelectItem key={value} value={value}>\n                                {label}\n                            </SelectItem>\n                            ))}\n                        </SelectContent>\n                        </Select>\n                        <Select\n                            value={filters.is_resolved === undefined ? undefined : filters.is_resolved.toString()}\n                            onValueChange={(value) => handleFilter('is_resolved', value === 'true')}\n                            >\n                            <SelectTrigger>\n                                <SelectValue placeholder=\"Statut\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                <SelectItem value=\"all\">Tous les statuts</SelectItem>  {/* Changed from \"\" to \"all\" */}\n                                <SelectItem value=\"false\">Non résolues</SelectItem>\n                                <SelectItem value=\"true\">Résolues</SelectItem>\n                            </SelectContent>\n                            </Select>\n              </div>\n\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Type</TableHead>\n                    <TableHead>Titre</TableHead>\n                    <TableHead>Hôpital</TableHead>\n                    <TableHead>Priorité</TableHead>\n                    <TableHead>Statut</TableHead>\n                    <TableHead>Date</TableHead>\n                    <TableHead className=\"text-right\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {alerts.data.map((alert: any) => (\n                    <TableRow key={alert.id}>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={typeColors[alert.type]}>\n                            {typeIcons[alert.type]}\n                          </span>\n                          <span>{types[alert.type]}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"font-medium\">{alert.titre}</TableCell>\n                      <TableCell>{alert.hopital.nom}</TableCell>\n                      <TableCell>\n                        <Badge className={priorityColors[alert.priorite]}>\n                          {priorities[alert.priorite]}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        {alert.is_resolved ? (\n                          <Badge className=\"bg-green-100 text-green-800\">\n                            <Check className=\"h-4 w-4 mr-1\" /> Résolue\n                          </Badge>\n                        ) : (\n                          <Badge variant=\"destructive\">En attente</Badge>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {new Date(alert.created_at).toLocaleDateString()}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        <Button variant=\"outline\" size=\"sm\" asChild>\n                          <Link href={route('alerts.show', alert.ref)}>Détails</Link>\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n\n            {alerts.links && (\n              <CardFooter className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-muted-foreground\">\n                  Affichage de {alerts.from} à {alerts.to} sur {alerts.total} alertes\n                </div>\n                <div className=\"flex space-x-2\">\n                  {alerts.links.map((link: any, index: number) => (\n                    <Button\n                      key={index}\n                      variant={link.active ? 'default' : 'outline'}\n                      size=\"sm\"\n                      asChild\n                      disabled={!link.url}\n                    >\n                      <Link href={link.url || '#'} dangerouslySetInnerHTML={{ __html: link.label }} />\n                    </Button>\n                  ))}\n                </div>\n              </CardFooter>\n            )}\n          </Card>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":["typeIcons","jsx","AlertTriangle","Clock","CircleAlert","Bell","Info","typeColors","priorityColors","breadcrumbs","Index","alerts","filters","types","priorities","handleFilter","field","value","router","jsxs","AppLayout","Head","Card","CardHeader","CardTitle","Button","Link","CardContent","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","label","Table","TableHeader","TableRow","TableHead","TableBody","alert","TableCell","Badge","Check","CardFooter","link","index"],"mappings":"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"}