{"version":3,"file":"Create-DUkEwxSo.js","sources":["../../../resources/js/pages/Alerts/Create.tsx"],"sourcesContent":["import { Head, Link, useForm } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\n\nconst breadcrumbs: BreadcrumbItem[] = [\n  {\n    title: 'Gestion des Alertes',\n    href: '/alerts',\n  },\n  {\n    title: 'Créer une Alerte',\n    href: '/alerts/create',\n  },\n];\n\nexport default function Create({ hopitals, medicalProduits, types, priorities }: any) {\n  const { data, setData, post, processing, errors } = useForm({\n    type: 'stock_faible',\n    priorite: 'moyen',\n    titre: '',\n    message: '',\n    hopital_id: '',\n    medical_produit_id: '',\n  });\n\n  const submit = (e: React.FormEvent) => {\n    e.preventDefault();\n    post(route('alerts.store'));\n  };\n\n  const normalizedHopitals = Array.isArray(hopitals) ? hopitals : [hopitals].filter(Boolean);\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title=\"Créer une Alerte\" />\n\n      <div className=\"py-12\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-bold\">Créer une Alerte</CardTitle>\n            </CardHeader>\n            <form onSubmit={submit}>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"type\">Type d'alerte</Label>\n                    <Select\n                      value={data.type}\n                      onValueChange={(value) => setData('type', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {Object.entries(types).map(([value, label]) => (\n                          <SelectItem key={value} value={value}>\n                            {label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.type && <p className=\"text-sm text-red-500\">{errors.type}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"priorite\">Priorité</Label>\n                    <Select\n                      value={data.priorite}\n                      onValueChange={(value) => setData('priorite', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner une priorité\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {Object.entries(priorities).map(([value, label]) => (\n                          <SelectItem key={value} value={value}>\n                            {label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.priorite && <p className=\"text-sm text-red-500\">{errors.priorite}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"titre\">Titre</Label>\n                    <Input\n                      id=\"titre\"\n                      value={data.titre}\n                      onChange={(e) => setData('titre', e.target.value)}\n                    />\n                    {errors.titre && <p className=\"text-sm text-red-500\">{errors.titre}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"hopital_id\">Hôpital</Label>\n                    <Select\n                      value={data.hopital_id?.toString()}\n                      onValueChange={(value) => setData('hopital_id', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un hôpital\">\n                          {data.hopital_id \n                            ? normalizedHopitals.find(h => h.id.toString() === data.hopital_id.toString())?.nom\n                            : null}\n                        </SelectValue>\n                      </SelectTrigger>\n                      <SelectContent>\n                        {normalizedHopitals.length > 0 ? (\n                          normalizedHopitals.map((hopital) => (\n                            <SelectItem key={hopital.id} value={hopital.id.toString()}>\n                              {hopital.nom} - {hopital.ville}\n                            </SelectItem>\n                          ))\n                        ) : (\n                          <SelectItem value=\"\" disabled>\n                            Aucun hôpital disponible\n                          </SelectItem>\n                        )}\n                      </SelectContent>\n                    </Select>\n                    {errors.hopital_id && <p className=\"text-sm text-red-500\">{errors.hopital_id}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"medical_produit_id\">Produit Médical (Optionnel)</Label>\n                    <Select\n                        value={data.medical_produit_id?.toString()}\n                        onValueChange={(value) => setData('medical_produit_id', value)}\n                        >\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Sélectionner un produit\">\n                            {data.medical_produit_id\n                                ? medicalProduits.find(p => p.id.toString() === data.medical_produit_id.toString())?.name\n                                : null}\n                            </SelectValue>\n                        </SelectTrigger>\n                        <SelectContent>\n                            {medicalProduits.map((produit: any) => (\n                            <SelectItem key={produit.id} value={produit.id.toString()}>\n                                {produit.name}\n                            </SelectItem>\n                            ))}\n                        </SelectContent>\n                        </Select>\n                  </div>\n\n                  <div className=\"md:col-span-2 space-y-2\">\n                    <Label htmlFor=\"message\">Message</Label>\n                    <Textarea\n                      id=\"message\"\n                      value={data.message}\n                      onChange={(e) => setData('message', e.target.value)}\n                      rows={5}\n                    />\n                    {errors.message && <p className=\"text-sm text-red-500\">{errors.message}</p>}\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between mt-2\">\n                <Button variant=\"outline\" asChild>\n                  <Link href={route('alerts.index')}>Annuler</Link>\n                </Button>\n                <Button type=\"submit\" disabled={processing}>\n                  Créer l'Alerte\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":["breadcrumbs","Create","hopitals","medicalProduits","types","priorities","data","setData","post","processing","errors","useForm","submit","e","normalizedHopitals","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Select","value","SelectTrigger","SelectValue","SelectContent","label","SelectItem","Input","_a","_b","h","hopital","_c","_d","p","produit","Textarea","CardFooter","Button","Link"],"mappings":"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"}