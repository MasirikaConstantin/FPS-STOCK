{"version":3,"file":"Create-Be-Z00hG.js","sources":["../../../resources/js/pages/Transferts/Create.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport {  X } from 'lucide-react';\nimport { Link } from '@inertiajs/react';\nimport { Head, router } from '@inertiajs/react';\nimport { toast } from 'sonner';\nimport { BreadcrumbItem } from '@/types';\nimport AppLayout from '@/layouts/app-layout';\n\nexport default function TransfertCreate({ produits, hopitals }: { produits: any[], hopitals: any[] }) {\n  const [selectedProduits, setSelectedProduits] = useState<Record<string, any>>({});\n  const [availableStocks, setAvailableStocks] = useState<Record<number, any[]>>({});\n  const [formData, setFormData] = useState({\n    to_hospital_id: null as number | null,\n    to_central: false,\n    priorite: 'moyen',\n    from_central : false,\n    notes: '',\n  });\n  const [processing, setProcessing] = useState(false);\n\n  // Charger les stocks disponibles avec les relations\n  useEffect(() => {\n    const stocksByProduit: Record<number, any[]> = {};\n    \n    produits.forEach(produit => {\n      stocksByProduit[produit.id] = produit.stocks\n        .filter(stock => stock.quantite > 0)\n        .map(stock => ({\n          ...stock,\n          hopital_nom: stock.hopital?.nom || 'Stock Central'\n        }));\n    });\n\n    setAvailableStocks(stocksByProduit);\n  }, [produits]);\n\n  const handleAddItem = (produitId: string) => {\n    const produit = produits.find(p => p.id.toString() === produitId);\n    if (produit && !selectedProduits[produitId]) {\n      const centralStock = availableStocks[produit.id]?.find(s => s.hopital_id === null);\n      \n      setSelectedProduits(prev => ({\n        ...prev,\n        [produitId]: {\n          medical_produit_id: produit.id,\n          name: produit.name,\n          stocks: availableStocks[produit.id] || [],\n          quantite: 1,\n          from_central: !!centralStock,\n          stock_source_id: centralStock?.id || null,\n          max_quantite: centralStock?.quantite || 0\n        }\n      }));\n    }\n  };\n\n  const handleRemoveItem = (produitId: string) => {\n    const newSelected = { ...selectedProduits };\n    delete newSelected[produitId];\n    setSelectedProduits(newSelected);\n  };\n\n  const handleStockChange = (produitId: string, stockId: string) => {\n    const stock = availableStocks[parseInt(produitId)]?.find(s => s.id.toString() === stockId);\n    \n    setSelectedProduits(prev => ({\n      ...prev,\n      [produitId]: {\n        ...prev[produitId],\n        stock_source_id: stock?.id || null,\n        from_central: stock?.hopital_id === null,\n        max_quantite: stock?.quantite || 0,\n        quantite: Math.min(prev[produitId].quantite, stock?.quantite || 1)\n      }\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setProcessing(true);\n    \n    const items = Object.values(selectedProduits).map(item => ({\n      medical_produit_id: item.medical_produit_id,\n      quantite: item.quantite,\n      from_central: item.from_central,\n      stock_source_id: item.stock_source_id\n    }));\n\n    const payload = {\n      to_hospital_id: formData.to_hospital_id,\n      to_central: formData.to_central,\n        from_central: formData.from_central,\n      priorite: formData.priorite,\n      notes: formData.notes,\n      items: items\n    };\n\n    console.log('Payload:', payload);\n\n    router.post(route('transferts.store'), payload, {\n      onSuccess: () => {\n        toast.success('Transfert créé avec succès');\n      },\n      onError: (errors) => {\n        console.error('Validation errors:', errors);\n        toast.error('Veuillez corriger les erreurs dans le formulaire');\n      },\n      onFinish: () => {\n        setProcessing(false);\n      }\n    });\n  };\n\n  const breadcrumbs: BreadcrumbItem[] = [\n    {\n      title: 'Transfert de stock',\n      href: '/transferts',\n    },\n    {\n      title: 'Nouveau Transfert',\n      href: '/transferts/create',\n    },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title=\"Nouveau Transfert\" />\n\n      <div className=\"py-12\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <h1 className=\"text-2xl font-bold mb-6\">Nouveau Transfert</h1>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"to_hospital_id\">Destination</Label>\n                <Select\n                  value={formData.to_central ? 'central' : formData.to_hospital_id?.toString() || ''}\n                  onValueChange={(value) => {\n                    if (value === 'central') {\n                      setFormData({\n                        ...formData,\n                        to_hospital_id: null,\n                        to_central: true,\n                        from_central: false,\n                      });\n                    } else {\n                      setFormData({\n                        ...formData,\n                        to_hospital_id: parseInt(value),\n                        to_central: false,\n                      });\n                    }\n                  }}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Sélectionner une destination\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"central\">Stock Central</SelectItem>\n                    {hopitals.map((hopital) => (\n                      <SelectItem key={hopital.id} value={hopital.id.toString()}>\n                        {hopital.nom}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"priorite\">Priorité</Label>\n                <Select\n                  value={formData.priorite}\n                  onValueChange={(value) => setFormData({...formData, priorite: value})}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Sélectionner une priorité\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"faible\">Faible</SelectItem>\n                    <SelectItem value=\"moyen\">Moyen</SelectItem>\n                    <SelectItem value=\"eleve\">Élevé</SelectItem>\n                    <SelectItem value=\"urgent\">Urgent</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                value={formData.notes}\n                onChange={(e) => setFormData({...formData, notes: e.target.value})}\n                placeholder=\"Informations supplémentaires...\"\n              />\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-lg font-medium\">Articles à transférer</h2>\n                <Select onValueChange={handleAddItem}>\n                  <SelectTrigger className=\"w-[250px]\">\n                    <SelectValue placeholder=\"Ajouter un produit\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {produits.map((produit) => (\n                      <SelectItem \n                        key={produit.id} \n                        value={produit.id.toString()}\n                        disabled={!!selectedProduits[produit.id] || availableStocks[produit.id]?.length === 0}\n                      >\n                        {produit.name}\n                        {availableStocks[produit.id]?.length === 0 && ' (Stock indisponible)'}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {Object.values(selectedProduits).length > 0 ? (\n                <div className=\"space-y-4\">\n                  {Object.values(selectedProduits).map((item) => (\n                    <div key={item.medical_produit_id} className=\"p-4 border rounded-lg relative\">\n                      <button\n                        type=\"button\"\n                        className=\"absolute top-2 right-2 p-1 rounded-full hover:bg-gray-100\"\n                        onClick={() => handleRemoveItem(item.medical_produit_id.toString())}\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </button>\n\n                      <h3 className=\"font-medium\">{item.name}</h3>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mt-2\">\n                        <div className=\"space-y-1\">\n                          <Label>Quantité</Label>\n                          <Input\n                            type=\"number\"\n                            min=\"1\"\n                            max={item.max_quantite}\n                            value={item.quantite}\n                            onChange={(e) => {\n                              const newQuantite = Math.min(\n                                parseInt(e.target.value) || 1,\n                                item.max_quantite\n                              );\n                              setSelectedProduits(prev => ({\n                                ...prev,\n                                [item.medical_produit_id]: {\n                                  ...prev[item.medical_produit_id],\n                                  quantite: newQuantite\n                                }\n                              }));\n                            }}\n                          />\n                          <p className=\"text-xs text-gray-500\">\n                            Disponible: {item.max_quantite}\n                          </p>\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          <Label>Source</Label>\n                          <Select\n                            value={item.from_central ? 'central' : 'hospital'}\n                            onValueChange={(value) => {\n                              const fromCentral = value === 'central';\n                              const centralStock = availableStocks[item.medical_produit_id]?.find(s => s.hopital_id === null);\n                              \n                              setSelectedProduits(prev => ({\n                                ...prev,\n                                [item.medical_produit_id]: {\n                                  ...prev[item.medical_produit_id],\n                                  from_central: fromCentral,\n                                  stock_source_id: fromCentral ? centralStock?.id : null,\n                                  max_quantite: fromCentral ? centralStock?.quantite : 0\n                                }\n                              }));\n                            }}\n                          >\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Sélectionner une source\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"central\">Stock Central</SelectItem>\n                              <SelectItem value=\"hospital\">Hôpital</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n\n                        {!item.from_central && (\n                          <div className=\"space-y-1\">\n                            <Label>Stock Source</Label>\n                            <Select\n                              value={item.stock_source_id?.toString() || ''}\n                              onValueChange={(value) => handleStockChange(\n                                item.medical_produit_id.toString(), \n                                value\n                              )}\n                            >\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Sélectionner un stock\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {availableStocks[item.medical_produit_id]\n                                  ?.filter(stock => stock.hopital_id !== null && stock.quantite > 0)\n                                  .map((stock) => (\n                                    <SelectItem \n                                      key={stock.id} \n                                      value={stock.id.toString()}\n                                    >\n                                      {stock.hopital_nom} - \n                                      Lot: {stock.numero_lot || 'N/A'} - \n                                      Qte: {stock.quantite}\n                                    </SelectItem>\n                                  ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 border rounded-lg \">\n                  <p className=\"text-gray-500\">Aucun produit sélectionné</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"flex justify-end gap-4\">\n              <Button variant=\"outline\" asChild>\n                <Link href={route('transferts.index')}>Annuler</Link>\n              </Button>\n              <Button \n                type=\"submit\" \n                disabled={processing || Object.values(selectedProduits).length === 0}\n              >\n                {processing ? 'Enregistrement...' : 'Enregistrer'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":["TransfertCreate","produits","hopitals","selectedProduits","setSelectedProduits","useState","availableStocks","setAvailableStocks","formData","setFormData","processing","setProcessing","useEffect","stocksByProduit","produit","stock","_a","handleAddItem","produitId","p","centralStock","s","prev","handleRemoveItem","newSelected","handleStockChange","stockId","handleSubmit","e","items","item","payload","router","toast","errors","breadcrumbs","jsxs","AppLayout","jsx","Head","Label","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","hopital","Textarea","_b","X","Input","newQuantite","fromCentral","Button","Link"],"mappings":"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"}