{"version":3,"file":"Index-5zPITV8a.js","sources":["../../../resources/js/pages/Hospitals/Index.tsx"],"sourcesContent":["import {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { App, PageProps } from '@/types/types';\nimport { Head, Link, router } from '@inertiajs/react';\nimport { Eye, MoreHorizontal, Pencil, Trash2 } from 'lucide-react';\nimport { useState } from 'react';\nimport { toast } from 'sonner';\n\nexport default function Index({ hospitals }: PageProps<{ hospitals: App.Hospital[] }>) {\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [hospitalToDelete, setHospitalToDelete] = useState<App.Hospital | null>(null);\n    const [openDropdownId, setOpenDropdownId] = useState<string | null>(null);\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Hôpitaux',\n            href: '/hospitals',\n        },\n    ];\n\n    const handleDelete = (hospital: App.Hospital) => {\n        setHospitalToDelete(hospital);\n        setDeleteDialogOpen(true);\n        setOpenDropdownId(null);\n    };\n\n    const confirmDelete = () => {\n        if (!hospitalToDelete) return;\n\n        router.delete(route('hopitals.destroy', hospitalToDelete.ref), {\n            preserveScroll: true,\n            onSuccess: () => {\n                toast.success('Hôpital supprimé avec succès');\n                setDeleteDialogOpen(false);\n            },\n            onError: () => {\n                toast.error('Une erreur est survenue lors de la suppression');\n            },\n            onFinish: () => {\n                setOpenDropdownId(null);\n            },\n        });\n    };\n\n    const getTypeLabel = (type: string) => {\n        const labels: Record<string, string> = {\n            central: 'Central',\n            general: 'Général',\n            reference: 'Référence',\n            centre_sante: 'Centre de Santé',\n        };\n        return labels[type] || type;\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title=\"Gestion des Hôpitaux\" />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <Card>\n                            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n                                <CardTitle className=\"text-xl font-semibold\">Hôpitaux</CardTitle>\n                                <Link href={route('hopitals.create')} className=\"text-white\">\n                                    <Button>Nouveau Hôpital</Button>\n                                </Link>\n                            </CardHeader>\n                            <CardContent>\n                            <div className=\"p-6\">\n                            \n                            <Table className=\"dark:text-gray-400cell w-full text-left text-sm text-gray-500 rtl:text-right\">\n                                <TableHeader>\n                                    <TableRow>\n                                        <TableHead>Nom</TableHead>\n                                        <TableHead>Type</TableHead>\n                                        <TableHead>Province/Ville</TableHead>\n                                        <TableHead>Capacité</TableHead>\n                                        <TableHead>Statut</TableHead>\n                                        <TableHead>Date de création</TableHead>\n                                        <TableHead>Actions</TableHead>\n                                    </TableRow>\n                                </TableHeader>\n                                <TableBody>\n                                    {hospitals && hospitals.length > 0 ? (\n                                        hospitals.map((hospital) => (\n                                            <TableRow key={hospital.id}>\n                                                <TableCell className=\"font-medidum text-black dark:text-white\">\n                                                    {hospital.nom}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {hospital.type ? (\n                                                        <Badge variant=\"secondary\">\n                                                            {getTypeLabel(hospital.type)}\n                                                        </Badge>\n                                                    ) : (\n                                                        '-'\n                                                    )}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {hospital.province} / {hospital.ville}\n                                                </TableCell>\n                                                <TableCell>{hospital.capacite}</TableCell>\n                                                <TableCell>\n                                                    <Badge variant={hospital.is_active ? 'default' : 'destructive'}>\n                                                        {hospital.is_active ? 'Actif' : 'Inactif'}\n                                                    </Badge>\n                                                </TableCell>\n                                                <TableCell>{new Date(hospital.created_at).toLocaleDateString()}</TableCell>\n                                                <TableCell>\n                                                    <DropdownMenu\n                                                        open={openDropdownId === hospital.ref}\n                                                        onOpenChange={(open) => {\n                                                            setOpenDropdownId(open ? hospital.ref : null);\n                                                        }}\n                                                    >\n                                                        <DropdownMenuTrigger asChild>\n                                                            <Button\n                                                                variant=\"ghost\"\n                                                                className=\"h-8 w-8 p-0\"\n                                                                onClick={(e) => e.stopPropagation()}\n                                                            >\n                                                                <MoreHorizontal className=\"h-4 w-4\" />\n                                                            </Button>\n                                                        </DropdownMenuTrigger>\n                                                        <DropdownMenuContent\n                                                            align=\"end\"\n                                                            onInteractOutside={() => setOpenDropdownId(null)}\n                                                        >\n                                                            <DropdownMenuItem asChild>\n                                                                <Link\n                                                                    href={route('hopitals.show', hospital.ref)}\n                                                                    className=\"flex items-center\"\n                                                                    onClick={() => setOpenDropdownId(null)}\n                                                                >\n                                                                    <Eye className=\"mr-2 h-4 w-4\" />\n                                                                    Voir\n                                                                </Link>\n                                                            </DropdownMenuItem>\n                                                            <DropdownMenuItem asChild>\n                                                                <Link\n                                                                    href={route('hopitals.edit', hospital.ref)}\n                                                                    className=\"flex items-center\"\n                                                                    onClick={() => setOpenDropdownId(null)}\n                                                                >\n                                                                    <Pencil className=\"mr-2 h-4 w-4\" />\n                                                                    Modifier\n                                                                </Link>\n                                                            </DropdownMenuItem>\n                                                            <DropdownMenuItem\n                                                                className=\"text-red-600 focus:bg-red-50 focus:text-red-600\"\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    handleDelete(hospital);\n                                                                    setOpenDropdownId(null);\n                                                                }}\n                                                            >\n                                                                <Trash2 className=\"mr-2 h-4 w-4\" />\n                                                                Supprimer\n                                                            </DropdownMenuItem>\n                                                        </DropdownMenuContent>\n                                                    </DropdownMenu>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={8} className=\"py-4 text-center\">\n                                                <div className=\"text-gray-500\">Aucun hôpital trouvé.</div>\n                                                <Button asChild variant=\"link\" className=\"mt-2\">\n                                                    <Link href={route('hopitals.create')}>Créer un hôpital</Link>\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </div>\n                            </CardContent>\n                        </Card>\n                       \n                    </div>\n                </div>\n            </div>\n\n            <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Êtes-vous sûr ?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            Cette action supprimera définitivement l'hôpital \"{hospitalToDelete?.nom}\" et ne pourra pas être annulée.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Annuler</AlertDialogCancel>\n                        <AlertDialogAction onClick={confirmDelete}>Supprimer</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </AppLayout>\n    );\n}"],"names":["Index","hospitals","deleteDialogOpen","setDeleteDialogOpen","useState","hospitalToDelete","setHospitalToDelete","openDropdownId","setOpenDropdownId","breadcrumbs","handleDelete","hospital","confirmDelete","router","toast","getTypeLabel","type","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","Link","Button","CardContent","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","DropdownMenu","open","DropdownMenuTrigger","e","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","Eye","Pencil","Trash2","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"81BAuBwB,SAAAA,GAAM,CAAE,UAAAC,GAAuD,CACnF,KAAM,CAACC,EAAkBC,CAAmB,EAAIC,EAAAA,SAAS,EAAK,EACxD,CAACC,EAAkBC,CAAmB,EAAIF,EAAAA,SAA8B,IAAI,EAC5E,CAACG,EAAgBC,CAAiB,EAAIJ,EAAAA,SAAwB,IAAI,EAElEK,EAAgC,CAClC,CACI,MAAO,WACP,KAAM,YAAA,CAEd,EAEMC,EAAgBC,GAA2B,CAC7CL,EAAoBK,CAAQ,EAC5BR,EAAoB,EAAI,EACxBK,EAAkB,IAAI,CAC1B,EAEMI,EAAgB,IAAM,CACnBP,GAELQ,EAAO,OAAO,MAAM,mBAAoBR,EAAiB,GAAG,EAAG,CAC3D,eAAgB,GAChB,UAAW,IAAM,CACbS,EAAM,QAAQ,8BAA8B,EAC5CX,EAAoB,EAAK,CAC7B,EACA,QAAS,IAAM,CACXW,EAAM,MAAM,gDAAgD,CAChE,EACA,SAAU,IAAM,CACZN,EAAkB,IAAI,CAAA,CAC1B,CACH,CACL,EAEMO,EAAgBC,IACqB,CACnC,QAAS,UACT,QAAS,UACT,UAAW,YACX,aAAc,iBAClB,GACcA,CAAI,GAAKA,EAIvB,OAAAC,OAACC,GAAU,YAAAT,EACP,SAAA,CAACU,EAAAA,IAAAC,EAAA,CAAK,MAAM,sBAAuB,CAAA,EAElCD,MAAA,MAAA,CAAI,UAAU,QACX,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,oCACX,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,0CACX,gBAACE,EACG,CAAA,SAAA,CAACJ,EAAAA,KAAAK,EAAA,CAAW,UAAU,uDAClB,SAAA,CAACH,EAAA,IAAAI,EAAA,CAAU,UAAU,wBAAwB,SAAQ,WAAA,EACrDJ,EAAA,IAACK,EAAK,CAAA,KAAM,MAAM,iBAAiB,EAAG,UAAU,aAC5C,SAAAL,EAAA,IAACM,EAAO,CAAA,SAAA,iBAAe,CAAA,CAC3B,CAAA,CAAA,EACJ,EACAN,EAAA,IAACO,GACD,SAACP,EAAAA,IAAA,MAAA,CAAI,UAAU,MAEf,SAAAF,EAAA,KAACU,EAAM,CAAA,UAAU,+EACb,SAAA,CAACR,EAAA,IAAAS,EAAA,CACG,gBAACC,EACG,CAAA,SAAA,CAAAV,EAAAA,IAACW,GAAU,SAAG,KAAA,CAAA,EACdX,EAAAA,IAACW,GAAU,SAAI,MAAA,CAAA,EACfX,EAAAA,IAACW,GAAU,SAAc,gBAAA,CAAA,EACzBX,EAAAA,IAACW,GAAU,SAAQ,UAAA,CAAA,EACnBX,EAAAA,IAACW,GAAU,SAAM,QAAA,CAAA,EACjBX,EAAAA,IAACW,GAAU,SAAgB,kBAAA,CAAA,EAC3BX,EAAAA,IAACW,GAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CACtB,CACJ,CAAA,EACAX,EAAA,IAACY,EACI,CAAA,SAAA9B,GAAaA,EAAU,OAAS,EAC7BA,EAAU,IAAKU,GACXM,EAAA,KAACY,EACG,CAAA,SAAA,CAAAV,EAAA,IAACa,EAAU,CAAA,UAAU,0CAChB,SAAArB,EAAS,IACd,EACCQ,EAAA,IAAAa,EAAA,CACI,SAASrB,EAAA,KACLQ,EAAA,IAAAc,EAAA,CAAM,QAAQ,YACV,SAAalB,EAAAJ,EAAS,IAAI,CAC/B,CAAA,EAEA,IAER,SACCqB,EACI,CAAA,SAAA,CAASrB,EAAA,SAAS,MAAIA,EAAS,KAAA,EACpC,EACAQ,EAAAA,IAACa,EAAW,CAAA,SAAArB,EAAS,QAAS,CAAA,EAC7BQ,EAAA,IAAAa,EAAA,CACG,SAACb,EAAA,IAAAc,EAAA,CAAM,QAAStB,EAAS,UAAY,UAAY,cAC5C,SAAAA,EAAS,UAAY,QAAU,SACpC,CAAA,EACJ,EACAQ,MAACa,GAAW,SAAI,IAAA,KAAKrB,EAAS,UAAU,EAAE,qBAAqB,QAC9DqB,EACG,CAAA,SAAAf,EAAA,KAACiB,EAAA,CACG,KAAM3B,IAAmBI,EAAS,IAClC,aAAewB,GAAS,CACF3B,EAAA2B,EAAOxB,EAAS,IAAM,IAAI,CAChD,EAEA,SAAA,CAACQ,EAAAA,IAAAiB,EAAA,CAAoB,QAAO,GACxB,SAAAjB,EAAA,IAACM,EAAA,CACG,QAAQ,QACR,UAAU,cACV,QAAUY,GAAMA,EAAE,gBAAgB,EAElC,SAAAlB,EAAAA,IAACmB,EAAe,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,EAE5C,EACArB,EAAA,KAACsB,EAAA,CACG,MAAM,MACN,kBAAmB,IAAM/B,EAAkB,IAAI,EAE/C,SAAA,CAACW,EAAAA,IAAAqB,EAAA,CAAiB,QAAO,GACrB,SAAAvB,EAAA,KAACO,EAAA,CACG,KAAM,MAAM,gBAAiBb,EAAS,GAAG,EACzC,UAAU,oBACV,QAAS,IAAMH,EAAkB,IAAI,EAErC,SAAA,CAACW,EAAAA,IAAAsB,EAAA,CAAI,UAAU,cAAe,CAAA,EAAE,MAAA,CAAA,CAAA,EAGxC,EACAtB,EAAAA,IAACqB,EAAiB,CAAA,QAAO,GACrB,SAAAvB,EAAA,KAACO,EAAA,CACG,KAAM,MAAM,gBAAiBb,EAAS,GAAG,EACzC,UAAU,oBACV,QAAS,IAAMH,EAAkB,IAAI,EAErC,SAAA,CAACW,EAAAA,IAAAuB,EAAA,CAAO,UAAU,cAAe,CAAA,EAAE,UAAA,CAAA,CAAA,EAG3C,EACAzB,EAAA,KAACuB,EAAA,CACG,UAAU,kDACV,QAAUH,GAAM,CACZA,EAAE,eAAe,EACjB3B,EAAaC,CAAQ,EACrBH,EAAkB,IAAI,CAC1B,EAEA,SAAA,CAACW,EAAAA,IAAAwB,EAAA,CAAO,UAAU,cAAe,CAAA,EAAE,WAAA,CAAA,CAAA,CAEvC,CAAA,CAAA,CACJ,CAAA,CAAA,CAER,CAAA,CAAA,CA5EW,EAAAhC,EAAS,EA6ExB,CACH,EAEDQ,EAAA,IAACU,EACG,CAAA,SAAAZ,EAAAA,KAACe,EAAU,CAAA,QAAS,EAAG,UAAU,mBAC7B,SAAA,CAACb,EAAA,IAAA,MAAA,CAAI,UAAU,gBAAgB,SAAqB,wBAAA,EACnDA,MAAAM,EAAA,CAAO,QAAO,GAAC,QAAQ,OAAO,UAAU,OACrC,SAAAN,EAAAA,IAACK,GAAK,KAAM,MAAM,iBAAiB,EAAG,4BAAgB,CAC1D,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CACI,CAAA,CAAA,EACJ,CAAA,CAEJ,CACJ,CAAA,EACJ,QAECoB,EAAY,CAAA,KAAM1C,EAAkB,aAAcC,EAC/C,gBAAC0C,EACG,CAAA,SAAA,CAAA5B,OAAC6B,EACG,CAAA,SAAA,CAAA3B,EAAAA,IAAC4B,GAAiB,SAAe,iBAAA,CAAA,SAChCC,EAAuB,CAAA,SAAA,CAAA,qDAC+B3C,GAAA,YAAAA,EAAkB,IAAI,kCAAA,CAC7E,CAAA,CAAA,EACJ,SACC4C,EACG,CAAA,SAAA,CAAA9B,EAAAA,IAAC+B,GAAkB,SAAO,SAAA,CAAA,EACzB/B,EAAA,IAAAgC,EAAA,CAAkB,QAASvC,EAAe,SAAS,WAAA,CAAA,CAAA,CACxD,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAAA,EACJ,CAER"}