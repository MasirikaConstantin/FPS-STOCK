{"version":3,"file":"Create-BIOEFEKv.js","sources":["../../../resources/js/pages/Stocks/Create.tsx"],"sourcesContent":["import AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { App, PageProps } from '@/types/types';\nimport { Head, Link, router, useForm } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { toast } from 'sonner';\nimport { FormEventHandler } from 'react';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { CalendarIcon } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { format } from 'date-fns';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nexport default function Create({ produits, hopitals }: PageProps<{ \n    produits: App.MedicalProduit[],\n    hopitals: App.Hopital[]\n}>) {\n    const { data, setData, post, processing, errors } = useForm({\n        medical_produit_id: '',\n        quantite: 1,\n        numero_lot: '',\n        date_expiration: null as Date | null,\n        prix_unitaire: null as number | null,\n        received_date: new Date(),\n        status: 'disponible',\n        hopital_id: null as string | null,\n    });\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Gestion des Stocks',\n            href: '/stocks',\n        },\n        {\n            title: 'Ajouter une entrée',\n            href: '/stocks/create',\n        },\n    ];\n\n    const submit: FormEventHandler = (e) => {\n        e.preventDefault();\n\n        post(route('stocks.store'), {\n            onSuccess: () => {\n                toast.success('Entrée de stock créée avec succès');\n            },\n            onError: () => {\n                toast.error('Une erreur est survenue lors de la création');\n            },\n        });\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title=\"Ajouter une entrée de stock\" />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>Création d'un stock</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                            <div className=\"p-6\">\n                            <form onSubmit={submit} className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                    {/* Produit (obligatoire) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"medical_produit_id\">Produit*</Label>\n                                        <Select\n                                            value={data.medical_produit_id || undefined}\n                                            onValueChange={(value) => setData('medical_produit_id', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner un produit\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {produits.map((produit) => (\n                                                    <SelectItem key={produit.id} value={produit.id.toString()}>\n                                                        {produit.name}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.medical_produit_id && <p className=\"text-sm text-red-500\">{errors.medical_produit_id}</p>}\n                                    </div>\n\n                                    {/* Quantité (gardé tel quel) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"quantite\">Quantité*</Label>\n                                        <Input\n                                            id=\"quantite\"\n                                            type=\"number\"\n                                            min=\"1\"\n                                            value={data.quantite}\n                                            onChange={(e) => setData('quantite', parseInt(e.target.value))}\n                                            required\n                                        />\n                                        {errors.quantite && <p className=\"text-sm text-red-500\">{errors.quantite}</p>}\n                                    </div>\n\n                                    {/* Numéro de lot (gardé tel quel) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"numero_lot\">Numéro de lot</Label>\n                                        <Input\n                                            id=\"numero_lot\"\n                                            value={data.numero_lot}\n                                            onChange={(e) => setData('numero_lot', e.target.value)}\n                                            placeholder=\"Optionnel\"\n                                        />\n                                        {errors.numero_lot && <p className=\"text-sm text-red-500\">{errors.numero_lot}</p>}\n                                    </div>\n\n                                    {/* Prix unitaire (gardé tel quel) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"prix_unitaire\">Prix unitaire (€)</Label>\n                                        <Input\n                                            id=\"prix_unitaire\"\n                                            type=\"number\"\n                                            step=\"0.01\"\n                                            min=\"0\"\n                                            value={data.prix_unitaire || ''}\n                                            onChange={(e) => setData('prix_unitaire', e.target.value ? parseFloat(e.target.value) : null)}\n                                            placeholder=\"Optionnel\"\n                                        />\n                                        {errors.prix_unitaire && <p className=\"text-sm text-red-500\">{errors.prix_unitaire}</p>}\n                                    </div>\n\n                                    {/* Date de réception (gardé tel quel) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"received_date\">Date de réception*</Label>\n                                        <Popover>\n                                            <PopoverTrigger asChild>\n                                                <Button\n                                                    variant=\"outline\"\n                                                    className={cn(\n                                                        'w-full justify-start text-left font-normal',\n                                                        !data.received_date && 'text-muted-foreground'\n                                                    )}\n                                                >\n                                                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                    {data.received_date ? format(data.received_date, 'PPP') : <span>Choisir une date</span>}\n                                                </Button>\n                                            </PopoverTrigger>\n                                            <PopoverContent className=\"w-auto p-0\">\n                                                <Calendar\n                                                    mode=\"single\"\n                                                    selected={data.received_date}\n                                                    onSelect={(date) => {\n                                                    if (date) {\n                                                        // Ajoute 1 heure pour compenser le décalage du fuseau horaire\n                                                        const adjustedDate = new Date(date);\n                                                        adjustedDate.setHours(adjustedDate.getHours() + 1);\n                                                        setData('received_date', adjustedDate);\n                                                    }\n                                                    }}\n                                                    initialFocus\n                                                />\n                                                </PopoverContent>\n                                            \n                                        </Popover>\n                                        {errors.received_date && <p className=\"text-sm text-red-500\">{errors.received_date}</p>}\n                                    </div>\n\n                                    {/* Date d'expiration (gardé tel quel) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"date_expiration\">Date d'expiration</Label>\n                                        <Popover>\n                                            <PopoverTrigger asChild>\n                                                <Button\n                                                    variant=\"outline\"\n                                                    className={cn(\n                                                        'w-full justify-start text-left font-normal',\n                                                        !data.date_expiration && 'text-muted-foreground'\n                                                    )}\n                                                >\n                                                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                    {data.date_expiration ? format(data.date_expiration, 'PPP') : <span>Choisir une date</span>}\n                                                </Button>\n                                            </PopoverTrigger>\n                                            <PopoverContent className=\"w-auto p-0\">\n                                                <Calendar\n                                                    mode=\"single\"\n                                                    selected={data.date_expiration || undefined}\n                                                    onSelect={(date) => {\n                                                    if (date) {\n                                                        // Ajoute 1 heure pour compenser le décalage du fuseau horaire\n                                                        const adjustedDate = new Date(date);\n                                                        adjustedDate.setHours(adjustedDate.getHours() + 1);\n                                                        setData('date_expiration', adjustedDate);\n                                                    } else {\n                                                        setData('date_expiration', null);\n                                                    }}}\n                                                    \n                                                    initialFocus\n                                                />\n                                            </PopoverContent>\n                                        </Popover>\n                                        {errors.date_expiration && <p className=\"text-sm text-red-500\">{errors.date_expiration}</p>}\n                                    </div>\n\n                                    {/* Emplacement (corrigé) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"hopital_id\">Emplacement</Label>\n                                        <Select\n                                            value={data.hopital_id === null ? \"null\" : data.hopital_id || undefined}\n                                            onValueChange={(value) => setData('hopital_id', value === \"null\" ? null : value)}\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Stock central\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                <SelectItem value=\"null\">Stock central</SelectItem>\n                                                {hopitals.map((hopital) => (\n                                                    <SelectItem key={hopital.id} value={hopital.id.toString()}>\n                                                        {hopital.nom}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.hopital_id && <p className=\"text-sm text-red-500\">{errors.hopital_id}</p>}\n                                    </div>\n\n                                    {/* Statut (corrigé) */}\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"status\">Statut*</Label>\n                                        <Select\n                                            value={data.status}\n                                            onValueChange={(value) => setData('status', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner un statut\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                <SelectItem value=\"disponible\">Disponible</SelectItem>\n                                                <SelectItem value=\"reservee\">Réservée</SelectItem>\n                                                <SelectItem value=\"expirer\">Expiré</SelectItem>\n                                                <SelectItem value=\"endommage\">Endommagé</SelectItem>\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.status && <p className=\"text-sm text-red-500\">{errors.status}</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"flex justify-end space-x-4\">\n                                    <Button variant=\"outline\" asChild>\n                                        <Link href={route('stocks.index')}>Annuler</Link>\n                                    </Button>\n                                    <Button type=\"submit\" disabled={processing}>\n                                        {processing ? 'Enregistrement...' : 'Enregistrer'}\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                            </CardContent>\n                        </Card>\n                        \n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["Create","produits","hopitals","data","setData","post","processing","errors","useForm","breadcrumbs","submit","e","toast","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Select","value","SelectTrigger","SelectValue","SelectContent","produit","SelectItem","Input","Popover","PopoverTrigger","Button","cn","CalendarIcon","format","PopoverContent","Calendar","date","adjustedDate","hopital","Link"],"mappings":"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"}