{"version":3,"file":"Edit-DiPRE8fw.js","sources":["../../../resources/js/pages/Transferts/Edit.tsx"],"sourcesContent":["import AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { PageProps } from '@/types/types';\nimport { Head, Link, router, useForm } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { toast } from 'sonner';\nimport { FormEventHandler } from 'react';\n\nexport default function Edit({ transfert, hopitals, stocks }: PageProps<{ \n    transfert: App.Transfert & { articles: Array<App.ArticleTransfert & { stock: App.Stock }> },\n    hopitals: App.Hopital[],\n    stocks: App.Stock[]\n}>) {\n    const { data, setData, put, processing, errors } = useForm({\n        from_hospital_id: transfert.from_hospital_id.toString(),\n        to_hospital_id: transfert.to_hospital_id.toString(),\n        priorite: transfert.priorite,\n        notes: transfert.notes || '',\n        articles: transfert.articles.map(article => ({\n            stock_id: article.stock_id.toString(),\n            medical_produit_id: article.medical_produit_id.toString(),\n            quantite: article.quantite,\n            ref: article.ref,\n        })),\n    });\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Transferts de Stock',\n            href: '/transferts',\n        },\n        {\n            title: `Modifier ${transfert.ref}`,\n            href: `/transferts/${transfert.ref}/edit`,\n        },\n    ];\n\n    const submit: FormEventHandler = (e) => {\n        e.preventDefault();\n\n        put(route('transferts.update', transfert.ref), {\n            onSuccess: () => {\n                toast.success('Transfert mis à jour avec succès');\n            },\n            onError: () => {\n                toast.error('Une erreur est survenue lors de la mise à jour');\n            },\n        });\n    };\n\n    const addArticle = () => {\n        setData('articles', [\n            ...data.articles,\n            { stock_id: '', medical_produit_id: '', quantite: 1 },\n        ]);\n    };\n\n    const removeArticle = (index: number) => {\n        const newArticles = [...data.articles];\n        newArticles.splice(index, 1);\n        setData('articles', newArticles);\n    };\n\n    const updateArticle = (index: number, field: string, value: any) => {\n        const newArticles = [...data.articles];\n        newArticles[index] = { ...newArticles[index], [field]: value };\n        setData('articles', newArticles);\n    };\n\n    const filteredStocks = stocks.filter(stock => \n        stock.hopital_id?.toString() === data.from_hospital_id\n    );\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title={`Modifier ${transfert.ref}`} />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <div className=\"p-6\">\n                            <form onSubmit={submit} className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"from_hospital_id\">Hôpital source*</Label>\n                                        <Select\n                                            value={data.from_hospital_id}\n                                            onValueChange={(value) => setData('from_hospital_id', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner un hôpital\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {hopitals.map((hopital) => (\n                                                    <SelectItem key={hopital.id} value={hopital.id.toString()}>\n                                                        {hopital.nom}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.from_hospital_id && <p className=\"text-sm text-red-500\">{errors.from_hospital_id}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"to_hospital_id\">Hôpital destination*</Label>\n                                        <Select\n                                            value={data.to_hospital_id}\n                                            onValueChange={(value) => setData('to_hospital_id', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner un hôpital\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {hopitals.map((hopital) => (\n                                                    <SelectItem key={hopital.id} value={hopital.id.toString()}>\n                                                        {hopital.nom}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.to_hospital_id && <p className=\"text-sm text-red-500\">{errors.to_hospital_id}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"priorite\">Priorité*</Label>\n                                        <Select\n                                            value={data.priorite}\n                                            onValueChange={(value) => setData('priorite', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner une priorité\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                <SelectItem value=\"faible\">Faible</SelectItem>\n                                                <SelectItem value=\"moyen\">Moyen</SelectItem>\n                                                <SelectItem value=\"eleve\">Élevé</SelectItem>\n                                                <SelectItem value=\"urgent\">Urgent</SelectItem>\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.priorite && <p className=\"text-sm text-red-500\">{errors.priorite}</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"notes\">Notes</Label>\n                                    <Textarea\n                                        id=\"notes\"\n                                        value={data.notes}\n                                        onChange={(e) => setData('notes', e.target.value)}\n                                        placeholder=\"Informations supplémentaires (optionnel)\"\n                                        rows={3}\n                                    />\n                                    {errors.notes && <p className=\"text-sm text-red-500\">{errors.notes}</p>}\n                                </div>\n\n                                <div className=\"space-y-4\">\n                                    <div className=\"flex justify-between items-center\">\n                                        <Label>Articles à transférer*</Label>\n                                        <Button \n                                            type=\"button\" \n                                            variant=\"outline\" \n                                            size=\"sm\" \n                                            onClick={addArticle}\n                                            disabled={!data.from_hospital_id}\n                                        >\n                                            Ajouter un article\n                                        </Button>\n                                    </div>\n\n                                    {data.articles.length > 0 ? (\n                                        <div className=\"space-y-4\">\n                                            {data.articles.map((article, index) => (\n                                                <div key={index} className=\"grid grid-cols-1 md:grid-cols-4 gap-4 items-end\">\n                                                    <div className=\"space-y-2\">\n                                                        <Label>Stock source*</Label>\n                                                        <Select\n                                                            value={article.stock_id}\n                                                            onValueChange={(value) => {\n                                                                const selectedStock = stocks.find(s => s.id.toString() === value);\n                                                                updateArticle(index, 'stock_id', value);\n                                                                if (selectedStock) {\n                                                                    updateArticle(index, 'medical_produit_id', selectedStock.medical_produit_id.toString());\n                                                                }\n                                                            }}\n                                                            required\n                                                        >\n                                                            <SelectTrigger>\n                                                                <SelectValue placeholder=\"Sélectionner un stock\" />\n                                                            </SelectTrigger>\n                                                            <SelectContent>\n                                                                {filteredStocks.map((stock) => (\n                                                                    <SelectItem key={stock.id} value={stock.id.toString()}>\n                                                                        {stock.medical_produit?.name} (Quantité: {stock.quantite})\n                                                                    </SelectItem>\n                                                                ))}\n                                                            </SelectContent>\n                                                        </Select>\n                                                        {errors[`articles.${index}.stock_id`] && (\n                                                            <p className=\"text-sm text-red-500\">{errors[`articles.${index}.stock_id`]}</p>\n                                                        )}\n                                                    </div>\n\n                                                    <div className=\"space-y-2\">\n                                                        <Label>Quantité*</Label>\n                                                        <Input\n                                                            type=\"number\"\n                                                            min=\"1\"\n                                                            value={article.quantite}\n                                                            onChange={(e) => updateArticle(index, 'quantite', parseInt(e.target.value))}\n                                                            required\n                                                        />\n                                                        {errors[`articles.${index}.quantite`] && (\n                                                            <p className=\"text-sm text-red-500\">{errors[`articles.${index}.quantite`]}</p>\n                                                        )}\n                                                    </div>\n\n                                                    <div>\n                                                        <Button\n                                                            type=\"button\"\n                                                            variant=\"destructive\"\n                                                            size=\"sm\"\n                                                            onClick={() => removeArticle(index)}\n                                                        >\n                                                            Supprimer\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <div className=\"text-center text-gray-500 py-4\">\n                                            {data.from_hospital_id \n                                                ? \"Aucun article ajouté au transfert\" \n                                                : \"Veuillez d'abord sélectionner un hôpital source\"}\n                                        </div>\n                                    )}\n                                </div>\n\n                                <div className=\"flex justify-end space-x-4\">\n                                    <Button variant=\"outline\" asChild>\n                                        <Link href={route('transferts.index')}>Annuler</Link>\n                                    </Button>\n                                    <Button \n                                        type=\"submit\" \n                                        disabled={processing || data.articles.length === 0}\n                                    >\n                                        {processing ? 'Enregistrement...' : 'Enregistrer'}\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["Edit","transfert","hopitals","stocks","data","setData","put","processing","errors","useForm","article","breadcrumbs","submit","e","toast","addArticle","removeArticle","index","newArticles","updateArticle","field","value","filteredStocks","stock","_a","jsxs","AppLayout","jsx","Head","Label","Select","SelectTrigger","SelectValue","SelectContent","hopital","SelectItem","Textarea","Button","selectedStock","s","Input","Link"],"mappings":"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"}