{"version":3,"file":"Index-BoWR4FL2.js","sources":["../../../resources/js/pages/Stocks/Index.tsx"],"sourcesContent":["import {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem, User } from '@/types';\nimport { App, PageProps } from '@/types/types';\nimport { Head, Link, router } from '@inertiajs/react';\nimport { Eye, MoreHorizontal, Pencil, Trash2, Box, PackageCheck, PackageX } from 'lucide-react';\nimport { useState } from 'react';\nimport { toast } from 'sonner';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nexport default function Index({ stocks, produits, hopitals, auth }: PageProps<{ \n    stocks: App.Stock[],\n    produits: App.MedicalProduit[],\n    hopitals: App.Hopital[],\n    auth: User\n}>) {\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [stockToDelete, setStockToDelete] = useState<App.Stock | null>(null);\n    const [openDropdownId, setOpenDropdownId] = useState<string | null>(null);\n    const canCreateStock = auth.user.permissions.some(p => p.action === 'create' && p.module === 'stocks');\n    const canUpdateStock = auth.user.permissions.some(p => p.action === 'update' && p.module === 'stocks');\n    const canDeleteStock = auth.user.permissions.some(p => p.action === 'delete' && p.module === 'stocks');\n\n    const isAdminCentral = auth.user.role === 'admin_central';\n    const isAdmin = auth.user.role === 'admin';\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Gestion des Stocks',\n            href: '/stocks',\n        },\n    ];\n\n    const handleDelete = (stock: App.Stock) => {\n        setStockToDelete(stock);\n        setDeleteDialogOpen(true);\n        setOpenDropdownId(null);\n    };\n\n    const confirmDelete = () => {\n        if (!stockToDelete) return;\n\n        router.delete(route('stocks.destroy', stockToDelete.ref), {\n            preserveScroll: true,\n            onSuccess: () => {\n                toast.success('Entrée de stock supprimée avec succès');\n                setDeleteDialogOpen(false);\n            },\n            onError: () => {\n                toast.error('Une erreur est survenue lors de la suppression');\n            },\n            onFinish: () => {\n                setOpenDropdownId(null);\n            },\n        });\n    };\n\n    const formatDate = (dateString: string | null) => {\n        if (!dateString) return '-';\n        return format(new Date(dateString), 'dd MMM yyyy', { locale: fr });\n    };\n\n    const getProduitName = (id: number) => {\n        return produits.find(p => p.id === id)?.name || 'Inconnu';\n    };\n\n    const getHopitalName = (id: number | null) => {\n        if (!id) return 'Stock central';\n        return hopitals.find(h => h.id === id)?.nom || 'Inconnu';\n    };\n\n    const getStatusBadge = (status: string) => {\n        switch (status) {\n            case 'disponible':\n                return <Badge variant=\"default\"><PackageCheck className=\"mr-1 h-3 w-3\" /> Disponible</Badge>;\n            case 'reservee':\n                return <Badge variant=\"secondary\"><Box className=\"mr-1 h-3 w-3\" /> Réservée</Badge>;\n            case 'expirer':\n                return <Badge variant=\"destructive\"><PackageX className=\"mr-1 h-3 w-3\" /> Expiré</Badge>;\n            case 'endommage':\n                return <Badge variant=\"destructive\">Endommagé</Badge>;\n            default:\n                return <Badge variant=\"outline\">Inconnu</Badge>;\n        }\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title=\"Gestion des Stocks\" />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <Card>\n                        <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n                            <CardTitle className=\"text-2xl font-bold\">Gestion des Stocks</CardTitle>\n\n                            {canCreateStock ? (\n                                    <Button asChild>\n                                        <Link href={route('stocks.create')}>Ajouter une entrée</Link>\n                                    </Button>\n                                ) : \n                                isAdminCentral ? (\n                                    <div className=\"text-red-500 text-sm font-bold w-1/2\">\n                                        <p>Vous êtes connecté en tant qu'admin central, Mais ne pouvez pas créer des stocks, vous devez ajouter des permissions pour y accéder</p>\n                                    </div>\n                                ) : \n                                isAdmin ? (\n                                        <div className=\"text-red-500 text-sm font-bold w-1/2\">\n                                            <p>Vous êtes connecté en tant qu'admin, Mais ne pouvez pas créer des stocks, vous devez ajouter des permissions pour y accéder</p>\n                                        </div>\n                                ) : null}\n                        </CardHeader>\n                        <CardContent>\n                        <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <div className=\"p-6\">\n                            <div className=\"flex justify-between items-center mb-6\">\n                                \n                                \n                            </div>\n\n                            <Table className=\"dark:text-gray-400cell w-full text-left text-sm text-gray-500 rtl:text-right\">\n                                <TableHeader>\n                                    <TableRow>\n                                        <TableHead>Produit</TableHead>\n                                        <TableHead>Quantité</TableHead>\n                                        <TableHead>Numéro de lot</TableHead>\n                                        <TableHead>Date expiration</TableHead>\n                                        <TableHead>Prix unitaire</TableHead>\n                                        <TableHead>Date réception</TableHead>\n                                        <TableHead>Statut</TableHead>\n                                        <TableHead>Actions</TableHead>\n                                    </TableRow>\n                                </TableHeader>\n                                <TableBody>\n                                    {stocks && stocks.length > 0 ? (\n                                        stocks.map((stock) => (\n                                            <TableRow key={stock.id}>\n                                                <TableCell className=\"font-medium text-black dark:text-white\">\n                                                    {getProduitName(stock.medical_produit_id)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {stock.quantite}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {stock.numero_lot || '-'}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {formatDate(stock.date_expiration)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {stock.prix_unitaire ? parseFloat(stock.prix_unitaire).toFixed(2) : '0.00'} FC\n\n                                                </TableCell>\n                                                <TableCell>\n                                                    {formatDate(stock.received_date)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {getStatusBadge(stock.status)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <DropdownMenu\n                                                        open={openDropdownId === stock.ref}\n                                                        onOpenChange={(open) => {\n                                                            setOpenDropdownId(open ? stock.ref : null);\n                                                        }}\n                                                    >\n                                                        <DropdownMenuTrigger asChild>\n                                                            <Button\n                                                                variant=\"ghost\"\n                                                                className=\"h-8 w-8 p-0\"\n                                                                onClick={(e) => e.stopPropagation()}\n                                                            >\n                                                                <MoreHorizontal className=\"h-4 w-4\" />\n                                                            </Button>\n                                                        </DropdownMenuTrigger>\n                                                        <DropdownMenuContent\n                                                            align=\"end\"\n                                                            onInteractOutside={() => setOpenDropdownId(null)}\n                                                        >\n                                                            <DropdownMenuItem asChild>\n                                                                <Link\n                                                                    href={route('stocks.show', stock.ref)}\n                                                                    className=\"flex items-center\"\n                                                                    onClick={() => setOpenDropdownId(null)}\n                                                                >\n                                                                    <Eye className=\"mr-2 h-4 w-4\" />\n                                                                    Voir\n                                                                </Link>\n                                                            </DropdownMenuItem>\n                                                            <DropdownMenuItem asChild>\n                                                                <Link\n                                                                    href={route('stocks.edit', stock.ref)}\n                                                                    className=\"flex items-center\"\n                                                                    onClick={() => setOpenDropdownId(null)}\n                                                                >\n                                                                    <Pencil className=\"mr-2 h-4 w-4\" />\n                                                                    Modifier\n                                                                </Link>\n                                                            </DropdownMenuItem>\n                                                            <DropdownMenuItem\n                                                                className=\"text-red-600 focus:bg-red-50 focus:text-red-600\"\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    handleDelete(stock);\n                                                                    setOpenDropdownId(null);\n                                                                }}\n                                                            >\n                                                                <Trash2 className=\"mr-2 h-4 w-4\" />\n                                                                Supprimer\n                                                            </DropdownMenuItem>\n                                                        </DropdownMenuContent>\n                                                    </DropdownMenu>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={9} className=\"py-4 text-center\">\n                                                <div className=\"text-gray-500\">Aucune entrée de stock trouvée.</div>\n                                                <Button asChild variant=\"link\" className=\"mt-2\">\n                                                    <Link href={route('stocks.create')}>Ajouter une entrée</Link>\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    </div>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n\n            <AlertDialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Êtes-vous sûr ?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            Cette action supprimera définitivement cette entrée de stock et ne pourra pas être annulée.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Annuler</AlertDialogCancel>\n                        <AlertDialogAction onClick={confirmDelete}>Supprimer</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </AppLayout>\n    );\n}"],"names":["Index","stocks","produits","hopitals","auth","deleteDialogOpen","setDeleteDialogOpen","useState","stockToDelete","setStockToDelete","openDropdownId","setOpenDropdownId","canCreateStock","p","isAdminCentral","isAdmin","breadcrumbs","handleDelete","stock","confirmDelete","router","toast","formatDate","dateString","format","fr","getProduitName","id","_a","getStatusBadge","status","jsxs","Badge","jsx","PackageCheck","Box","PackageX","AppLayout","Head","Card","CardHeader","CardTitle","Button","Link","CardContent","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","DropdownMenu","open","DropdownMenuTrigger","e","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","Eye","Pencil","Trash2","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"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"}