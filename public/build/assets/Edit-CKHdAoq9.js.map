{"version":3,"file":"Edit-CKHdAoq9.js","sources":["../../../resources/js/pages/Kits/Edit.tsx"],"sourcesContent":["import AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { App, PageProps } from '@/types/types';\nimport { Head, Link, router, useForm } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { toast } from 'sonner';\nimport { FormEventHandler } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nexport default function Edit({ kit, categories, produits }: PageProps<{ \n    kit: App.Kit,\n    categories: App.Categorie[],\n    produits: App.MedicalProduit[]\n}>) {\n    const { data, setData, put, processing, errors } = useForm({\n        nom: kit?.nom,\n        description: kit.description || '',\n        categorie_id: kit.categorie_id.toString(),\n        is_active: kit.is_active,\n        articles: kit.articles?.map(article => ({\n            medical_produit_id: article.medical_produit_id.toString(),\n            quantite: article.quantite,\n            ref: article.ref,\n        })) || [],\n    });\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Gestion des Kits',\n            href: '/kits',\n        },\n        {\n            title: `Modifier ${kit?.nom}`,\n            href: `/kits/${kit?.ref}/edit`,\n        },\n    ];\n\n    const submit: FormEventHandler = (e) => {\n        e.preventDefault();\n\n        put(route('kits.update', kit?.ref), {\n            onSuccess: () => {\n                toast.success('Kit mis à jour avec succès');\n            },\n            onError: () => {\n                toast.error('Une erreur est survenue lors de la mise à jour');\n            },\n        });\n    };\n\n    const addArticle = () => {\n        setData('articles', [\n            ...data.articles,\n            { medical_produit_id: '', quantite: 1 },\n        ]);\n    };\n\n    const removeArticle = (index: number) => {\n        const newArticles = [...data.articles];\n        newArticles.splice(index, 1);\n        setData('articles', newArticles);\n    };\n\n    const updateArticle = (index: number, field: string, value: any) => {\n        const newArticles = [...data.articles];\n        newArticles[index] = { ...newArticles[index], [field]: value };\n        setData('articles', newArticles);\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title={`Modifier ${kit.nom}`} />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>Modification du Kit {kit?.nom}</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                            <div className=\"p-6\">\n                            <form onSubmit={submit} className=\"space-y-6\">\n                                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"nom\">Nom du Kit*</Label>\n                                        <Input\n                                            id=\"nom\"\n                                            value={data.nom}\n                                            onChange={(e) => setData('nom', e.target.value)}\n                                            placeholder=\"Nom du kit\"\n                                            required\n                                        />\n                                        {errors.nom && <p className=\"text-sm text-red-500\">{errors.nom}</p>}\n                                    </div>\n\n                                    <div className=\"space-y-2\">\n                                        <Label htmlFor=\"categorie_id\">Catégorie*</Label>\n                                        <Select\n                                            value={data.categorie_id}\n                                            onValueChange={(value) => setData('categorie_id', value)}\n                                            required\n                                        >\n                                            <SelectTrigger>\n                                                <SelectValue placeholder=\"Sélectionner une catégorie\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {categories.map((categorie) => (\n                                                    <SelectItem key={categorie.id} value={categorie.id.toString()}>\n                                                        {categorie.nom}\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                        {errors.categorie_id && <p className=\"text-sm text-red-500\">{errors.categorie_id}</p>}\n                                    </div>\n\n                                    <div className=\"flex items-center space-x-2\">\n                                        <Switch\n                                            id=\"is_active\"\n                                            checked={data.is_active}\n                                            onCheckedChange={(checked) => setData('is_active', checked)}\n                                        />\n                                        <Label htmlFor=\"is_active\">Kit actif</Label>\n                                    </div>\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"description\">Description</Label>\n                                    <Textarea\n                                        id=\"description\"\n                                        value={data.description}\n                                        onChange={(e) => setData('description', e.target.value)}\n                                        placeholder=\"Description du kit (optionnel)\"\n                                        rows={3}\n                                    />\n                                    {errors.description && <p className=\"text-sm text-red-500\">{errors.description}</p>}\n                                </div>\n\n                                <div className=\"space-y-4\">\n                                    <div className=\"flex justify-between items-center\">\n                                        <Label>Articles du Kit</Label>\n                                        <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={addArticle}>\n                                            Ajouter un article\n                                        </Button>\n                                    </div>\n\n                                    {data.articles.length > 0 ? (\n                                        <div className=\"space-y-4 border px-4 py-4 rounded-2xl\">\n                                            {data.articles.map((article, index) => (\n                                                <div key={index} className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n                                                    <div className=\"space-y-2\">\n                                                        <Label>Produit*</Label>\n                                                        <Select\n                                                            value={article.medical_produit_id}\n                                                            onValueChange={(value) => updateArticle(index, 'medical_produit_id', value)}\n                                                            required\n                                                        >\n                                                            <SelectTrigger>\n                                                                <SelectValue placeholder=\"Sélectionner un produit\" />\n                                                            </SelectTrigger>\n                                                            <SelectContent>\n                                                                {produits.map((produit) => (\n                                                                    <SelectItem key={produit.id} value={produit.id.toString()}>\n                                                                        {produit.name} ({produit.unite})\n                                                                    </SelectItem>\n                                                                ))}\n                                                            </SelectContent>\n                                                        </Select>\n                                                        {errors[`articles.${index}.medical_produit_id`] && (\n                                                            <p className=\"text-sm text-red-500\">{errors[`articles.${index}.medical_produit_id`]}</p>\n                                                        )}\n                                                    </div>\n\n                                                    <div className=\"space-y-2\">\n                                                        <Label>Quantité*</Label>\n                                                        <Input\n                                                            type=\"number\"\n                                                            min=\"1\"\n                                                            value={article.quantite}\n                                                            onChange={(e) => updateArticle(index, 'quantite', parseInt(e.target.value))}\n                                                            required\n                                                        />\n                                                        {errors[`articles.${index}.quantite`] && (\n                                                            <p className=\"text-sm text-red-500\">{errors[`articles.${index}.quantite`]}</p>\n                                                        )}\n                                                    </div>\n\n                                                    <div>\n                                                        <Button\n                                                            type=\"button\"\n                                                            variant=\"destructive\"\n                                                            size=\"sm\"\n                                                            onClick={() => removeArticle(index)}\n                                                        >\n                                                            Supprimer\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ) : (\n                                        <div className=\"text-center text-gray-500 py-4\">\n                                            Aucun article ajouté au kit\n                                        </div>\n                                    )}\n                                </div>\n\n                                <div className=\"flex justify-end space-x-4\">\n                                    <Button variant=\"outline\" asChild>\n                                        <Link href={route('kits.index')}>Annuler</Link>\n                                    </Button>\n                                    <Button type=\"submit\" disabled={processing}>\n                                        {processing ? 'Enregistrement...' : 'Enregistrer'}\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                            </CardContent>\n                        </Card>\n                        \n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["Edit","kit","categories","produits","data","setData","put","processing","errors","useForm","_a","article","breadcrumbs","submit","e","toast","addArticle","removeArticle","index","newArticles","updateArticle","field","value","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Input","Select","SelectTrigger","SelectValue","SelectContent","categorie","SelectItem","Switch","checked","Textarea","Button","produit","Link"],"mappings":"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"}