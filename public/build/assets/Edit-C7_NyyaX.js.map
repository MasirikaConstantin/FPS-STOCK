{"version":3,"file":"Edit-C7_NyyaX.js","sources":["../../../resources/js/pages/Alerts/Edit.tsx"],"sourcesContent":["import { Head, Link, useForm } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\n\nconst breadcrumbs: BreadcrumbItem[] = [\n  {\n    title: 'Gestion des Alertes',\n    href: '/alerts',\n  },\n  {\n    title: 'Modifier une Alerte',\n    href: '#',\n  },\n];\n\nexport default function Edit({ alert, hopitals, medicalProduits, types, priorities }: any) {\n  const { data, setData, put, processing, errors } = useForm({\n    type: alert.type,\n    priorite: alert.priorite,\n    titre: alert.titre,\n    message: alert.message,\n    hopital_id: alert.hopital_id,\n    medical_produit_id: alert.medical_produit_id,\n    is_resolved: alert.is_resolved,\n  });\n\n  const submit = (e: React.FormEvent) => {\n    e.preventDefault();\n    put(route('alerts.update', alert.ref));\n  };\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title=\"Modifier une Alerte\" />\n\n      <div className=\"py-12\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-bold\">Modifier l'Alerte {alert.ref}</CardTitle>\n            </CardHeader>\n            <form onSubmit={submit}>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"type\">Type d'alerte</Label>\n                    <Select\n                      value={data.type}\n                      onValueChange={(value) => setData('type', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un type\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {Object.entries(types).map(([value, label]) => (\n                          <SelectItem key={value} value={value}>\n                            {label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.type && <p className=\"text-sm text-red-500\">{errors.type}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"priorite\">Priorité</Label>\n                    <Select\n                      value={data.priorite}\n                      onValueChange={(value) => setData('priorite', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner une priorité\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {Object.entries(priorities).map(([value, label]) => (\n                          <SelectItem key={value} value={value}>\n                            {label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.priorite && <p className=\"text-sm text-red-500\">{errors.priorite}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"titre\">Titre</Label>\n                    <Input\n                      id=\"titre\"\n                      value={data.titre}\n                      onChange={(e) => setData('titre', e.target.value)}\n                    />\n                    {errors.titre && <p className=\"text-sm text-red-500\">{errors.titre}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"hopital_id\">Hôpital</Label>\n                    <Select\n                      value={data.hopital_id}\n                      onValueChange={(value) => setData('hopital_id', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un hôpital\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {hopitals.map((hopital: any) => (\n                          <SelectItem key={hopital.id} value={hopital.id}>\n                            {hopital.nom}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.hopital_id && <p className=\"text-sm text-red-500\">{errors.hopital_id}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"medical_produit_id\">Produit Médical (Optionnel)</Label>\n                    <Select\n                      value={data.medical_produit_id}\n                      onValueChange={(value) => setData('medical_produit_id', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un produit\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {medicalProduits.map((produit: any) => (\n                          <SelectItem key={produit.id} value={produit.id}>\n                            {produit.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {errors.medical_produit_id && (\n                      <p className=\"text-sm text-red-500\">{errors.medical_produit_id}</p>\n                    )}\n                  </div>\n\n                  <div className=\"md:col-span-2 space-y-2\">\n                    <Label htmlFor=\"message\">Message</Label>\n                    <Textarea\n                      id=\"message\"\n                      value={data.message}\n                      onChange={(e) => setData('message', e.target.value)}\n                      rows={5}\n                    />\n                    {errors.message && <p className=\"text-sm text-red-500\">{errors.message}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"is_resolved\">Statut</Label>\n                    <Select\n                      value={data.is_resolved ? 'true' : 'false'}\n                      onValueChange={(value) => setData('is_resolved', value === 'true')}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Sélectionner un statut\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"false\">En attente</SelectItem>\n                        <SelectItem value=\"true\">Résolue</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\" asChild>\n                  <Link href={route('alerts.show', alert.ref)}>Annuler</Link>\n                </Button>\n                <Button type=\"submit\" disabled={processing}>\n                  Enregistrer les modifications\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":["breadcrumbs","Edit","alert","hopitals","medicalProduits","types","priorities","data","setData","put","processing","errors","useForm","submit","e","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Select","value","SelectTrigger","SelectValue","SelectContent","label","SelectItem","Input","hopital","produit","Textarea","CardFooter","Button","Link"],"mappings":"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"}