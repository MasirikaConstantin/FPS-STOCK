{"version":3,"file":"dashboard-DFMxVsMk.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/car.js","../../../node_modules/lucide-react/dist/esm/icons/circle-check-big.js","../../../node_modules/lucide-react/dist/esm/icons/search.js","../../../node_modules/date-fns/compareAsc.js","../../../node_modules/date-fns/constructNow.js","../../../node_modules/date-fns/_lib/getRoundingMethod.js","../../../node_modules/date-fns/differenceInMilliseconds.js","../../../node_modules/date-fns/endOfDay.js","../../../node_modules/date-fns/isLastDayOfMonth.js","../../../node_modules/date-fns/differenceInMonths.js","../../../node_modules/date-fns/differenceInSeconds.js","../../../node_modules/date-fns/formatDistance.js","../../../node_modules/date-fns/formatDistanceToNow.js","../../../resources/js/components/Actions.tsx","../../../resources/js/components/dashboard-stat.tsx","../../../resources/js/components/RecentActivities.tsx","../../../resources/js/pages/dashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.475.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2\",\n      key: \"5owen\"\n    }\n  ],\n  [\"circle\", { cx: \"7\", cy: \"17\", r: \"2\", key: \"u2ysq9\" }],\n  [\"path\", { d: \"M9 17h6\", key: \"r8uit2\" }],\n  [\"circle\", { cx: \"17\", cy: \"17\", r: \"2\", key: \"axvx0g\" }]\n];\nconst Car = createLucideIcon(\"Car\", __iconNode);\n\nexport { __iconNode, Car as default };\n//# sourceMappingURL=car.js.map\n","/**\n * @license lucide-react v0.475.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n];\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", __iconNode);\n\nexport { __iconNode, CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.475.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"path\", { d: \"m21 21-4.3-4.3\", key: \"1qie3q\" }]\n];\nconst Search = createLucideIcon(\"Search\", __iconNode);\n\nexport { __iconNode, Search as default };\n//# sourceMappingURL=search.js.map\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Minus, FileText, Search, Package, AlertTriangle } from 'lucide-react';\nimport { router } from '@inertiajs/react';\nimport { usePage } from '@inertiajs/react';\n\nexport const QuickActions = () => {\n    const { auth } = usePage().props;\n    const userRole = auth.user.role;\n    const getItemActions = (userRole: string) => {\n    const Allactions = [\n      {\n        title: 'Entrée de stock',\n        description: 'Enregistrer une livraison',\n        icon: Plus,\n        roles : [\"admin_central\"],\n\n        color: 'bg-green-500/90 hover:bg-green-600 text-white',\n        action: () => router.visit('/stocks/create')\n      },\n      {\n        title: 'Sortie de stock',\n        description: 'Consommation/vente',\n        roles : [\"admin_central\", 'admin', 'medecin', 'pharmacien','magasinier'],\n        icon: Minus,\n        color: 'bg-red-500/90 hover:bg-red-600 text-white',\n        action: () => router.visit('/stock/mouvements/')\n      },\n      {\n        title: 'Stock',\n        roles : [\"admin_central\", 'admin', 'medecin', 'pharmacien','magasinier'],\n        description: 'Compter les stocks',\n        icon: Package,\n        color: 'bg-blue-500/90 hover:bg-blue-600 text-white',\n        action: () => auth.user.role === 'admin_central' ? router.visit('/stock/entree/activite') : router.visit('/stocks')\n      },\n      {\n        title: 'Rechercher',\n        description: 'Trouver un article',\n        roles : [\"admin_central\", 'admin', 'medecin', 'pharmacien','magasinier'],\n        icon: Search,\n        color: 'bg-slate-500/90 hover:bg-slate-600 text-white',\n        action: () => console.log('Rechercher')\n      },\n      {\n        title: 'Rapport',\n        description: 'Générer un rapport',\n        roles : [\"admin_central\", 'admin', 'medecin', 'pharmacien','magasinier'],\n        icon: FileText,\n        color: 'bg-purple-500/90 hover:bg-purple-600 text-white',\n        action: () => console.log('Rapport')\n      },\n      {\n        title: 'Alertes',\n        description: 'Gérer les alertes',\n        icon: AlertTriangle,\n        roles : [\"admin_central\", 'admin', 'medecin', 'pharmacien','magasinier'],\n        color: 'bg-orange-500/90 hover:bg-orange-600 text-white',\n        action: () => router.visit('/alerts/')\n      }\n    ];\nreturn Allactions.filter(item => item.roles?.includes(userRole));\n\n  }\n  \n\nconst actions = getItemActions(userRole);\n\n  return (\n    \n    <Card className=\"border-border/50 shadow-sm\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">Actions rapides</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-3\">\n          {actions.map((action, index) => {\n            const Icon = action.icon;\n            return (\n              <Button\n                key={index}\n                variant=\"ghost\"\n                className=\"h-auto p-4 flex flex-col items-start space-y-2 hover:shadow-md transition-all border border-border/30 hover:border-primary/30\"\n                onClick={action.action}\n              >\n                <div className=\"flex items-center space-x-3 w-full\">\n                  <div className={`w-10 h-10 ${action.color} rounded-lg flex items-center justify-center flex-shrink-0`}>\n                    <Icon className=\"w-5 h-5\" />\n                  </div>\n                  <div className=\"flex-1 text-left space-y-0.5\">\n                    <div className=\"font-medium text-foreground\">{action.title}</div>\n                    <div className=\"text-xs text-muted-foreground\">{action.description}</div>\n                  </div>\n                </div>\n              </Button>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};","import { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Package } from \"lucide-react\";\n\ninterface StatsCardProps {\n    title: string;\n    value: number;\n    icon: React.ComponentType<{ className?: string }>;\n    variant?: 'default' | 'success' | 'destructive' | 'warning' | 'info';\n}\n\nconst StatsCard = ({ title, value, icon: Icon, variant = 'default' }: StatsCardProps) => {\n    return (\n        <Card className=\"w-full\" color={variant}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <Icon className=\"h-8 w-8 text-muted-foreground\" />\n            <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n            </CardHeader>\n            <CardContent>\n                <div className=\"text-2xl font-bold\">{value.toLocaleString('fr-FR')}</div>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default StatsCard;\n","import { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Activity, Package, Truck, CheckCircle, AlertTriangle } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { Badge } from \"./ui/badge\";\n\ninterface RecentActivity {\n  id: string | number; // Modifié pour accepter string ou number\n  type: 'transfert' | 'stock' | 'alerte' | 'reception' | 'entre_stock';\n  title: string;\n  description?: string;\n  hospital?: string;\n  product?: string;\n  createdAt: string;\n  status?: 'en_attente' | 'approuve' | 'en_transit' | 'livre' | 'annule' | 'entre_stock';\n}\n\ninterface RecentActivitiesProps {\n  activities: RecentActivity[];\n}\n\nconst RecentActivities = ({ activities }: RecentActivitiesProps) => {\n  const getActivityIcon = (type: RecentActivity['type']) => {\n    switch (type) {\n      case 'transfert': return <Truck className=\"h-4 w-4\" />;\n      case 'stock': return <Package className=\"h-4 w-4\" />;\n      case 'alerte': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'reception': return <CheckCircle className=\"h-4 w-4\" />;\n      case 'entre_stock': return <Package className=\"h-4 w-4\" />;\n      default: return <Activity className=\"h-4 w-4\" />;\n    }\n  };\n  const getActivityVariant = (type: RecentActivity['type']) => {\n    switch (type) {\n      case 'transfert': return 'default';\n      case 'stock': return 'default';\n      case 'alerte': return 'destructive';\n      case 'reception': return 'default';\n      case 'entre_stock': return 'secondary';\n      default: return 'default';\n    }\n  };\n\n  const getStatusColor = (status?: string) => {\n    switch (status) {\n      case 'approuve': return 'text-green-500';\n      case 'en_transit': return 'text-blue-500';\n      case 'livre': return 'text-purple-500';\n      case 'annule': return 'text-red-500';\n      case 'en_attente': return 'text-yellow-500';\n      case 'entre_stock': return 'text-primary-500';\n      default: return 'text-gray-500';\n    }\n  };\n\n  // Vérification des données et génération de clés uniques\n  const validatedActivities = activities.map(activity => ({\n    ...activity,\n    uniqueKey: activity.id || `${activity.type}-${activity.createdAt}-${Math.random().toString(36).substr(2, 9)}`\n  }));\n\n  return (\n    <Card className=\"col-span-12 lg:col-span-6\">\n      <CardHeader>\n        <CardTitle>Activités Récentes</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-8\">\n          {validatedActivities.map((activity) => (\n            <div key={activity.uniqueKey} className=\"flex items-center\">\n              <div className=\"flex h-9 w-9 items-center justify-center rounded-full bg-muted\">\n                {getActivityIcon(activity.type)}\n              </div>\n              <div className=\"ml-4 space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">\n                  {activity.title}\n                  {activity.hospital && (\n                    <span className=\"font-bold\"> {activity.hospital}</span>\n                  )}\n                </p>\n                {activity.product && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    {activity.product}\n                  </p>\n                )}\n                {activity.status && (\n                  <span className={`text-xs ${getStatusColor(activity.status)}`}>\n                    {activity.status.replace('_', ' ')}\n                  </span>\n                )}\n              </div>\n              <div className=\"ml-auto text-xs text-muted-foreground\">\n                {formatDistanceToNow(new Date(activity.createdAt), {\n                  addSuffix: true,\n                  locale: fr\n                })}\n                <br />\n                <Badge variant={getActivityVariant(activity.type)}>\n                  {activity.title.charAt(0).toUpperCase() + activity.title.slice(1)}\n                </Badge>\n\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RecentActivities;","import { QuickActions } from '@/components/Actions';\nimport StatsCard from '@/components/dashboard-stat';\nimport RecentActivities from '@/components/RecentActivities';\nimport { PlaceholderPattern } from '@/components/ui/placeholder-pattern';\nimport AppLayout from '@/layouts/app-layout';\nimport { Auth, type BreadcrumbItem } from '@/types';\nimport { Head } from '@inertiajs/react';\nimport { AlertCircle, Car, Hospital, Package } from 'lucide-react';\n\n\nconst breadcrumbs: BreadcrumbItem[] = [\n    {\n        title: 'Dashboard',\n        href: '/dashboard',\n    },\n];\n\nexport default function Dashboard({ auth,stocks_total,hopitaux_connectes,alertes_avertissement_expiration,transferts_en_attente,recentActivities }: { stocks_total: number,hopitaux_connectes: number,alertes_avertissement_expiration: number,transferts_en_attente: number,recentActivities: any, auth:Auth }) {\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title=\"Dashboard\" />\n            <div className=\"flex h-full flex-1 flex-col gap-4 overflow-x-auto rounded-xl p-4\">\n                <div className=\"grid auto-rows-min gap-4 md:grid-cols-4\">\n                    \n                    {auth.user.role ===\"admin_central\" && (\n                        <>\n                        <StatsCard  title=\"Stocks\" value={stocks_total} icon={Package} variant=\"destructive\" />\n                        <StatsCard  title=\"Hopitaux Connectés\" value={hopitaux_connectes} icon={Hospital} variant=\"destructive\" />\n                        <StatsCard  title=\"Alertes\" value={alertes_avertissement_expiration} icon={AlertCircle} variant=\"destructive\" />\n                        <StatsCard  title=\"Transferts En Attente\" value={transferts_en_attente} icon={Car} variant=\"destructive\" />\n                        </>\n                    )}\n                    \n                </div>\n                <div className=\"relative min-h-[100vh] overflow-hidden rounded-xl border border-sidebar-border/70 md:min-h-min dark:border-sidebar-border\">\n                <div className=\"flex h-full flex-1 flex-col gap-4 overflow-x-auto rounded-xl p-4\">\n                    <div className=\"flex flex-col gap-4 md:flex-row\">\n                    <div className=\"flex-1\">\n                        <RecentActivities activities={recentActivities} />\n                    </div>\n                    <div className=\"flex-1\">\n                        <QuickActions />\n                    </div>\n                    </div>\n                </div>\n                </div>\n\n            </div>\n        </AppLayout>\n    );\n}\n"],"names":["__iconNode","Car","createLucideIcon","CircleCheckBig","Search","compareAsc","dateLeft","dateRight","diff","toDate","constructNow","date","constructFrom","getRoundingMethod","method","number","result","differenceInMilliseconds","laterDate","earlierDate","endOfDay","options","_date","isLastDayOfMonth","endOfMonth","differenceInMonths","laterDate_","workingLaterDate","earlierDate_","normalizeDates","sign","difference","differenceInCalendarMonths","isLastMonthNotFull","differenceInSeconds","formatDistance","defaultOptions","getDefaultOptions","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","months","minutesInDay","hours","minutesInMonth","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","QuickActions","auth","usePage","userRole","actions","Plus","router","Minus","Package","FileText","AlertTriangle","item","_a","jsxs","Card","jsx","CardHeader","CardTitle","CardContent","action","index","Icon","Button","StatsCard","title","value","variant","RecentActivities","activities","getActivityIcon","type","Truck","CheckCircle","Activity","getActivityVariant","getStatusColor","status","validatedActivities","activity","fr","Badge","breadcrumbs","Dashboard","stocks_total","hopitaux_connectes","alertes_avertissement_expiration","transferts_en_attente","recentActivities","AppLayout","Head","Fragment","Hospital","AlertCircle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}