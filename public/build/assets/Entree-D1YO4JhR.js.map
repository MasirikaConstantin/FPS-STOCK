{"version":3,"file":"Entree-D1YO4JhR.js","sources":["../../../resources/js/pages/Stock/Entree.tsx"],"sourcesContent":["import { useForm } from '@inertiajs/react';\nimport { Head } from '@inertiajs/react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Plus } from 'lucide-react';\nimport AppLayout from '@/layouts/app-layout';\nimport { PageProps, BreadcrumbItem } from '@/types';\nimport { MedicalProduit } from '@/types/stock';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface EntreeProps extends PageProps {\n  products: MedicalProduit[];\n}\n\nexport default function Entree({ products, auth }: EntreeProps) {\n  const { data, setData, post, processing, errors, reset } = useForm({\n    medical_produit_id: '',\n    quantite: 1,\n    numero_lot: '',\n    date_expiration: '',\n    prix_unitaire: '',\n    notes: '',\n  });\n\n  const submit = (e: React.FormEvent) => {\n    e.preventDefault();\n    post(route('stock.entree.store'));\n  };\n\n  const breadcrumbs: BreadcrumbItem[] = [\n    { title: 'Stock', href: route('stocks.index') },\n    \n  {\n      title: 'Mouvements',\n      href: route('stock.mouvements.index'),\n  },\n    { title: 'Entrée de stock', href: route('stock.entree.create') },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title=\"Entrée de stock\" />\n\n      <div className=\"py-12\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"overflow-hidden  sm:rounded-lg\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"mb-6 text-2xl font-bold\">\n                Nouvelle Entrée de Stock\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"\">\n                \n                <form onSubmit={submit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"product\">Produit</Label>\n                      <Select\n                        onValueChange={(value) => setData('medical_produit_id', value)}\n                        value={data.medical_produit_id}\n                        required\n                      >\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Sélectionner un produit\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {products.map(product => (\n                            <SelectItem key={product.id} value={product.id.toString()}>\n                              {product.name}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"quantite\">Quantité</Label>\n                      <Input\n                        id=\"quantite\"\n                        type=\"number\"\n                        min=\"1\"\n                        value={data.quantite}\n                        onChange={(e) => setData('quantite', parseInt(e.target.value) || 1)}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"numero_lot\">Numéro de lot (optionnel)</Label>\n                      <Input\n                        id=\"numero_lot\"\n                        value={data.numero_lot}\n                        onChange={(e) => setData('numero_lot', e.target.value)}\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"date_expiration\">Date d'expiration (optionnel)</Label>\n                      <Input\n                        id=\"date_expiration\"\n                        type=\"date\"\n                        value={data.date_expiration}\n                        onChange={(e) => setData('date_expiration', e.target.value)}\n                        min={new Date().toISOString().split('T')[0]}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"prix_unitaire\">Prix unitaire (optionnel)</Label>\n                      <Input\n                        id=\"prix_unitaire\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        min=\"0\"\n                        value={data.prix_unitaire}\n                        onChange={(e) => setData('prix_unitaire', e.target.value)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"notes\">Notes (optionnel)</Label>\n                    <Input\n                      id=\"notes\"\n                      value={data.notes}\n                      onChange={(e) => setData('notes', e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"flex justify-end\">\n                    <Button type=\"submit\" disabled={processing} className=\"gap-2\">\n                      <Plus className=\"h-4 w-4\" />\n                      Enregistrer l'entrée\n                    </Button>\n                  </div>\n                </form>\n              </div>\n              </CardContent>\n            </Card>\n            \n          </div>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":["Entree","products","auth","data","setData","post","processing","useForm","submit","e","breadcrumbs","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Select","value","SelectTrigger","SelectValue","SelectContent","product","SelectItem","Input","Button","Plus"],"mappings":"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"}