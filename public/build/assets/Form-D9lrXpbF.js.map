{"version":3,"file":"Form-D9lrXpbF.js","sources":["../../../resources/js/pages/Hospitals/Form.tsx"],"sourcesContent":["import { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from '@/components/ui/select';\nimport AppLayout from '@/layouts/app-layout';\nimport { BreadcrumbItem } from '@/types';\nimport { PageProps } from '@/types/types';\nimport { Head, Link, useForm } from '@inertiajs/react';\nimport { toast } from 'sonner';\n\ninterface HospitalFormProps {\n    hopital?: {\n        id?: number;\n        ref?: string;\n        nom: string;\n        type: string;\n        province: string;\n        ville: string;\n        address: string;\n        contact_person: string;\n        phone: string;\n        email: string;\n        capacite: number;\n        is_active: boolean;\n        coordonees: any;\n        division_administrative_id: number;\n    };\n    divisions: any[];\n    types: string[];\n}\n\nexport default function Form({ hopital, divisions, types }: PageProps<HospitalFormProps>) {\n    const { data, setData, errors, post, put, processing } = useForm({\n        nom: hopital?.nom || '',\n        type: hopital?.type || '',\n        province: hopital?.province || '',\n        ville: hopital?.ville || '',\n        address: hopital?.address || '',\n        contact_person: hopital?.contact_person || '',\n        phone: hopital?.phone || '',\n        email: hopital?.email || '',\n        capacite: hopital?.capacite || 0,\n        is_active: hopital?.is_active || true,\n        coordonees: hopital?.coordonees || null,\n        division_administrative_id: hopital?.division_administrative_id || null,\n    });\n\n    const breadcrumbs: BreadcrumbItem[] = [\n        {\n            title: 'Hôpitaux',\n            href: '/hopitals',\n        },\n        {\n            title: hopital ? 'Modifier Hôpital' : 'Créer Hôpital',\n            href: '/hopitals',\n\n        },\n    ];\n\n    const submit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (hopital) {\n            put(route('hopitals.update', hopital.ref),\n            {\n                onSuccess: () => {\n                    toast.success('Hôpital mis à jour avec succès');\n                },\n                onError: () => {\n                    toast.error('Une erreur est survenue');\n                },\n            }\n        \n        );\n        } else {\n            post(route('hopitals.store'));\n        }\n    };\n\n    return (\n        <AppLayout breadcrumbs={breadcrumbs}>\n            <Head title={hopital ? 'Modifier Hôpital' : 'Créer Hôpital'} />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n                    <div className=\"overflow-hidden shadow-sm sm:rounded-lg\">\n                        <Card>\n                            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\n                                <CardTitle className=\"text-xl font-semibold\">{hopital ? 'Modifier Hôpital' : 'Créer Hôpital'}</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"p-6\">\n                                <form onSubmit={submit} className=\"space-y-6\">\n                                    <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"nom\">Nom *</Label>\n                                            <Input\n                                                id=\"nom\"\n                                                value={data.nom}\n                                                onChange={(e) => setData('nom', e.target.value)}\n                                                placeholder=\"Nom de l'hôpital\"\n                                            />\n                                            {errors.nom && <p className=\"text-sm text-red-500\">{errors.nom}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"type\">Type</Label>\n                                            <Select\n                                                value={data.type}\n                                                onValueChange={(value) => setData('type', value)}\n                                            >\n                                                <SelectTrigger>\n                                                    <SelectValue placeholder=\"Sélectionner un type\" />\n                                                </SelectTrigger>\n                                                <SelectContent>\n                                                    {types.map((type) => (\n                                                        <SelectItem key={type} value={type}>\n                                                            {type === 'central' && 'Central'}\n                                                            {type === 'general' && 'Général'}\n                                                            {type === 'reference' && 'Référence'}\n                                                            {type === 'centre_sante' && 'Centre de Santé'}\n                                                        </SelectItem>\n                                                    ))}\n                                                </SelectContent>\n                                            </Select>\n                                            {errors.type && <p className=\"text-sm text-red-500\">{errors.type}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"province\">Province *</Label>\n                                            <Input\n                                                id=\"province\"\n                                                value={data.province}\n                                                onChange={(e) => setData('province', e.target.value)}\n                                                placeholder=\"Province\"\n                                            />\n                                            {errors.province && <p className=\"text-sm text-red-500\">{errors.province}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"ville\">Ville *</Label>\n                                            <Input\n                                                id=\"ville\"\n                                                value={data.ville}\n                                                onChange={(e) => setData('ville', e.target.value)}\n                                                placeholder=\"Ville\"\n                                            />\n                                            {errors.ville && <p className=\"text-sm text-red-500\">{errors.ville}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"address\">Adresse</Label>\n                                            <Input\n                                                id=\"address\"\n                                                value={data.address}\n                                                onChange={(e) => setData('address', e.target.value)}\n                                                placeholder=\"Adresse complète\"\n                                            />\n                                            {errors.address && <p className=\"text-sm text-red-500\">{errors.address}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"division_administrative_id\">Division Administrative</Label>\n                                            <Select\n                                                value={data.division_administrative_id?.toString() || ''}\n                                                onValueChange={(value) => setData('division_administrative_id', parseInt(value) || null)}\n                                            >\n                                                <SelectTrigger>\n                                                    <SelectValue placeholder=\"Sélectionner une division\" />\n                                                </SelectTrigger>\n                                                <SelectContent>\n                                                    {divisions.map((division) => (\n                                                        <SelectItem key={division.id} value={division.id.toString()}>\n                                                            {division.nom}\n                                                        </SelectItem>\n                                                    ))}\n                                                </SelectContent>\n                                            </Select>\n                                            {errors.division_administrative_id && (\n                                                <p className=\"text-sm text-red-500\">{errors.division_administrative_id}</p>\n                                            )}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"contact_person\">Personne de contact</Label>\n                                            <Input\n                                                id=\"contact_person\"\n                                                value={data.contact_person}\n                                                onChange={(e) => setData('contact_person', e.target.value)}\n                                                placeholder=\"Nom du contact\"\n                                            />\n                                            {errors.contact_person && (\n                                                <p className=\"text-sm text-red-500\">{errors.contact_person}</p>\n                                            )}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"phone\">Téléphone</Label>\n                                            <Input\n                                                id=\"phone\"\n                                                value={data.phone}\n                                                onChange={(e) => setData('phone', e.target.value)}\n                                                placeholder=\"Numéro de téléphone\"\n                                            />\n                                            {errors.phone && <p className=\"text-sm text-red-500\">{errors.phone}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"email\">Email</Label>\n                                            <Input\n                                                id=\"email\"\n                                                type=\"email\"\n                                                value={data.email}\n                                                onChange={(e) => setData('email', e.target.value)}\n                                                placeholder=\"Email\"\n                                            />\n                                            {errors.email && <p className=\"text-sm text-red-500\">{errors.email}</p>}\n                                        </div>\n\n                                        <div className=\"space-y-2\">\n                                            <Label htmlFor=\"capacite\">Capacité</Label>\n                                            <Input\n                                                id=\"capacite\"\n                                                type=\"number\"\n                                                min=\"0\"\n                                                value={data.capacite}\n                                                onChange={(e) => setData('capacite', parseInt(e.target.value) || 0)}\n                                                placeholder=\"Capacité d'accueil\"\n                                            />\n                                            {errors.capacite && <p className=\"text-sm text-red-500\">{errors.capacite}</p>}\n                                        </div>\n\n                                        <div className=\"flex items-center space-x-2\">\n                                            <Checkbox\n                                                id=\"is_active\"\n                                                checked={data.is_active}\n                                                onCheckedChange={(checked) => setData('is_active', Boolean(checked))}\n                                            />\n                                            <Label htmlFor=\"is_active\">Actif</Label>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"flex justify-end space-x-4\">\n                                        <Button asChild variant=\"outline\">\n                                            <Link href={route('hopitals.index')}>Annuler</Link>\n                                        </Button>\n                                        <Button type=\"submit\" disabled={processing}>\n                                            {hopital ? 'Mettre à jour' : 'Créer'}\n                                        </Button>\n                                    </div>\n                                </form>\n                            </div>\n                            </CardContent>\n                        </Card>\n                        \n                    </div>\n                </div>\n            </div>\n        </AppLayout>\n    );\n}"],"names":["Form","hopital","divisions","types","data","setData","errors","post","put","processing","useForm","breadcrumbs","submit","e","toast","jsxs","AppLayout","jsx","Head","Card","CardHeader","CardTitle","CardContent","Label","Input","Select","value","SelectTrigger","SelectValue","SelectContent","type","SelectItem","_a","division","Checkbox","checked","Button","Link"],"mappings":"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"}